// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: notify_push_message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from notify_push_message.proto</summary>
  public static partial class NotifyPushMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for notify_push_message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NotifyPushMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlub3RpZnlfcHVzaF9tZXNzYWdlLnByb3RvEgVQcm90bxoLY29uc3QucHJv",
            "dG8aCmRhdGEucHJvdG8aEGV4Y2VsY29uc3QucHJvdG8aGWdvb2dsZS9wcm90",
            "b2J1Zi9hbnkucHJvdG8iRwoJTm90aWZ5TXNnEhEKCUFjY291bnRJRBgBIAEo",
            "CRInCglBbnlOb3RpZnkYAiADKAsyFC5nb29nbGUucHJvdG9idWYuQW55IkAK",
            "CENoYXRVc2VyEhAKCFVzZXJOYW1lGAEgASgJEgwKBFV1aWQYAiABKAkSFAoM",
            "Q2hhdFNlcnZlcklkGAMgASgFIpYBCgRDaGF0Eh8KBlNlbmRlchgBIAEoCzIP",
            "LlByb3RvLkNoYXRVc2VyEiEKCFJlY2VpdmVyGAIgASgLMg8uUHJvdG8uQ2hh",
            "dFVzZXISDwoHR3JvdXBJZBgDIAEoCRIoCghDaGF0VHlwZRgEIAEoDjIWLlBy",
            "b3RvLkNoYXRNZXNzYWdlVHlwZRIPCgdDb250ZW50GAUgASgJIpEBCgtQbGF5",
            "ZXJTdGF0ZRIrCgVTdGF0ZRgBIAEoDjIcLlByb3RvLlBsYXllclN0YXRlLlN0",
            "YXRlVHlwZRIdCgRVc2VyGAIgASgLMg8uUHJvdG8uQ2hhdFVzZXISEAoIU2Vy",
            "dmVySUQYAyABKAUiJAoJU3RhdGVUeXBlEgsKB09mZmxpbmUQABIKCgZPbmxp",
            "bmUQASJyChVOX05vdGlmeV9CYXR0bGVTZXJ2ZXISEgoKU2VydmVyVVVJRBgB",
            "IAEoCRIlCgZTZXJ2ZXIYAiABKAsyFS5Qcm90by5HYW1lU2VydmVySW5mbxIP",
            "CgdMZXZlbElEGAMgASgFEg0KBVJlVHJ5GAQgASgIIlcKE05fTm90aWZ5X01h",
            "dGNoR3JvdXASDwoHTGV2ZWxJRBgBIAEoBRIjCgdQbGF5ZXJzGAIgAygLMhIu",
            "UHJvdG8uTWF0Y2hQbGF5ZXISCgoCSWQYAyABKAkiZgodTl9Ob3RpZnlfSW52",
            "aXRlSm9pbk1hdGNoR3JvdXASDwoHTGV2ZWxJRBgBIAEoBRIPCgdHcm91cElk",
            "GAIgASgJEiMKB0ludml0ZXIYAyABKAsyEi5Qcm90by5NYXRjaFBsYXllcio/",
            "Cg9DaGF0TWVzc2FnZVR5cGUSDAoIQ01UX05vbmUQABIPCgtDTVRfUHJpdmF0",
            "ZRABEg0KCUNNVF9Hcm91cBACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.ConstReflection.Descriptor, global::Proto.DataReflection.Descriptor, global::Proto.ExcelconstReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Proto.ChatMessageType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.NotifyMsg), global::Proto.NotifyMsg.Parser, new[]{ "AccountID", "AnyNotify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.ChatUser), global::Proto.ChatUser.Parser, new[]{ "UserName", "Uuid", "ChatServerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Chat), global::Proto.Chat.Parser, new[]{ "Sender", "Receiver", "GroupId", "ChatType", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PlayerState), global::Proto.PlayerState.Parser, new[]{ "State", "User", "ServerID" }, null, new[]{ typeof(global::Proto.PlayerState.Types.StateType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.N_Notify_BattleServer), global::Proto.N_Notify_BattleServer.Parser, new[]{ "ServerUUID", "Server", "LevelID", "ReTry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.N_Notify_MatchGroup), global::Proto.N_Notify_MatchGroup.Parser, new[]{ "LevelID", "Players", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.N_Notify_InviteJoinMatchGroup), global::Proto.N_Notify_InviteJoinMatchGroup.Parser, new[]{ "LevelID", "GroupId", "Inviter" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ChatMessageType {
    /// <summary>
    ///None 
    /// </summary>
    [pbr::OriginalName("CMT_None")] CmtNone = 0,
    /// <summary>
    ///私聊
    /// </summary>
    [pbr::OriginalName("CMT_Private")] CmtPrivate = 1,
    /// <summary>
    ///群组聊天
    /// </summary>
    [pbr::OriginalName("CMT_Group")] CmtGroup = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///需要转发通知消息
  /// </summary>
  public sealed partial class NotifyMsg : pb::IMessage<NotifyMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotifyMsg> _parser = new pb::MessageParser<NotifyMsg>(() => new NotifyMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.NotifyPushMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyMsg(NotifyMsg other) : this() {
      accountID_ = other.accountID_;
      anyNotify_ = other.anyNotify_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyMsg Clone() {
      return new NotifyMsg(this);
    }

    /// <summary>Field number for the "AccountID" field.</summary>
    public const int AccountIDFieldNumber = 1;
    private string accountID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountID {
      get { return accountID_; }
      set {
        accountID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AnyNotify" field.</summary>
    public const int AnyNotifyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_anyNotify_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> anyNotify_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> AnyNotify {
      get { return anyNotify_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountID != other.AccountID) return false;
      if(!anyNotify_.Equals(other.anyNotify_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountID.Length != 0) hash ^= AccountID.GetHashCode();
      hash ^= anyNotify_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountID);
      }
      anyNotify_.WriteTo(output, _repeated_anyNotify_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountID);
      }
      size += anyNotify_.CalculateSize(_repeated_anyNotify_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyMsg other) {
      if (other == null) {
        return;
      }
      if (other.AccountID.Length != 0) {
        AccountID = other.AccountID;
      }
      anyNotify_.Add(other.anyNotify_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountID = input.ReadString();
            break;
          }
          case 18: {
            anyNotify_.AddEntriesFrom(input, _repeated_anyNotify_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccountID = input.ReadString();
            break;
          }
          case 18: {
            anyNotify_.AddEntriesFrom(ref input, _repeated_anyNotify_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChatUser : pb::IMessage<ChatUser>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChatUser> _parser = new pb::MessageParser<ChatUser>(() => new ChatUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.NotifyPushMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatUser(ChatUser other) : this() {
      userName_ = other.userName_;
      uuid_ = other.uuid_;
      chatServerId_ = other.chatServerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatUser Clone() {
      return new ChatUser(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    /// <summary>
    ///nike name 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private string uuid_ = "";
    /// <summary>
    ///nike
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ChatServerId" field.</summary>
    public const int ChatServerIdFieldNumber = 3;
    private int chatServerId_;
    /// <summary>
    ///serverid 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChatServerId {
      get { return chatServerId_; }
      set {
        chatServerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (Uuid != other.Uuid) return false;
      if (ChatServerId != other.ChatServerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (ChatServerId != 0) hash ^= ChatServerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uuid);
      }
      if (ChatServerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChatServerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (ChatServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatServerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatUser other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.ChatServerId != 0) {
        ChatServerId = other.ChatServerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Uuid = input.ReadString();
            break;
          }
          case 24: {
            ChatServerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Uuid = input.ReadString();
            break;
          }
          case 24: {
            ChatServerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Chat : pb::IMessage<Chat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Chat> _parser = new pb::MessageParser<Chat>(() => new Chat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.NotifyPushMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat(Chat other) : this() {
      sender_ = other.sender_ != null ? other.sender_.Clone() : null;
      receiver_ = other.receiver_ != null ? other.receiver_.Clone() : null;
      groupId_ = other.groupId_;
      chatType_ = other.chatType_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat Clone() {
      return new Chat(this);
    }

    /// <summary>Field number for the "Sender" field.</summary>
    public const int SenderFieldNumber = 1;
    private global::Proto.ChatUser sender_;
    /// <summary>
    ///消息发送者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.ChatUser Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }

    /// <summary>Field number for the "Receiver" field.</summary>
    public const int ReceiverFieldNumber = 2;
    private global::Proto.ChatUser receiver_;
    /// <summary>
    ///消息接收者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.ChatUser Receiver {
      get { return receiver_; }
      set {
        receiver_ = value;
      }
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private string groupId_ = "";
    /// <summary>
    ///group ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ChatType" field.</summary>
    public const int ChatTypeFieldNumber = 4;
    private global::Proto.ChatMessageType chatType_ = global::Proto.ChatMessageType.CmtNone;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.ChatMessageType ChatType {
      get { return chatType_; }
      set {
        chatType_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 5;
    private string content_ = "";
    /// <summary>
    ///消息体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Sender, other.Sender)) return false;
      if (!object.Equals(Receiver, other.Receiver)) return false;
      if (GroupId != other.GroupId) return false;
      if (ChatType != other.ChatType) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (receiver_ != null) hash ^= Receiver.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (ChatType != global::Proto.ChatMessageType.CmtNone) hash ^= ChatType.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sender_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Sender);
      }
      if (receiver_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Receiver);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupId);
      }
      if (ChatType != global::Proto.ChatMessageType.CmtNone) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ChatType);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      if (receiver_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Receiver);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (ChatType != global::Proto.ChatMessageType.CmtNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatType);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chat other) {
      if (other == null) {
        return;
      }
      if (other.sender_ != null) {
        if (sender_ == null) {
          Sender = new global::Proto.ChatUser();
        }
        Sender.MergeFrom(other.Sender);
      }
      if (other.receiver_ != null) {
        if (receiver_ == null) {
          Receiver = new global::Proto.ChatUser();
        }
        Receiver.MergeFrom(other.Receiver);
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.ChatType != global::Proto.ChatMessageType.CmtNone) {
        ChatType = other.ChatType;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sender_ == null) {
              Sender = new global::Proto.ChatUser();
            }
            input.ReadMessage(Sender);
            break;
          }
          case 18: {
            if (receiver_ == null) {
              Receiver = new global::Proto.ChatUser();
            }
            input.ReadMessage(Receiver);
            break;
          }
          case 26: {
            GroupId = input.ReadString();
            break;
          }
          case 32: {
            ChatType = (global::Proto.ChatMessageType) input.ReadEnum();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (sender_ == null) {
              Sender = new global::Proto.ChatUser();
            }
            input.ReadMessage(Sender);
            break;
          }
          case 18: {
            if (receiver_ == null) {
              Receiver = new global::Proto.ChatUser();
            }
            input.ReadMessage(Receiver);
            break;
          }
          case 26: {
            GroupId = input.ReadString();
            break;
          }
          case 32: {
            ChatType = (global::Proto.ChatMessageType) input.ReadEnum();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerState : pb::IMessage<PlayerState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerState> _parser = new pb::MessageParser<PlayerState>(() => new PlayerState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.NotifyPushMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerState(PlayerState other) : this() {
      state_ = other.state_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      serverID_ = other.serverID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerState Clone() {
      return new PlayerState(this);
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Proto.PlayerState.Types.StateType state_ = global::Proto.PlayerState.Types.StateType.Offline;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.PlayerState.Types.StateType State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Proto.ChatUser user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.ChatUser User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "ServerID" field.</summary>
    public const int ServerIDFieldNumber = 3;
    private int serverID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerID {
      get { return serverID_; }
      set {
        serverID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (!object.Equals(User, other.User)) return false;
      if (ServerID != other.ServerID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Proto.PlayerState.Types.StateType.Offline) hash ^= State.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (ServerID != 0) hash ^= ServerID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != global::Proto.PlayerState.Types.StateType.Offline) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (ServerID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ServerID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Proto.PlayerState.Types.StateType.Offline) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (ServerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerState other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Proto.PlayerState.Types.StateType.Offline) {
        State = other.State;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Proto.ChatUser();
        }
        User.MergeFrom(other.User);
      }
      if (other.ServerID != 0) {
        ServerID = other.ServerID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Proto.PlayerState.Types.StateType) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::Proto.ChatUser();
            }
            input.ReadMessage(User);
            break;
          }
          case 24: {
            ServerID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::Proto.PlayerState.Types.StateType) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::Proto.ChatUser();
            }
            input.ReadMessage(User);
            break;
          }
          case 24: {
            ServerID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum StateType {
        [pbr::OriginalName("Offline")] Offline = 0,
        [pbr::OriginalName("Online")] Online = 1,
      }

    }
    #endregion

  }

  /// <summary>
  ///通知用户进入战斗服务器
  /// </summary>
  public sealed partial class N_Notify_BattleServer : pb::IMessage<N_Notify_BattleServer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<N_Notify_BattleServer> _parser = new pb::MessageParser<N_Notify_BattleServer>(() => new N_Notify_BattleServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<N_Notify_BattleServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.NotifyPushMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public N_Notify_BattleServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public N_Notify_BattleServer(N_Notify_BattleServer other) : this() {
      serverUUID_ = other.serverUUID_;
      server_ = other.server_ != null ? other.server_.Clone() : null;
      levelID_ = other.levelID_;
      reTry_ = other.reTry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public N_Notify_BattleServer Clone() {
      return new N_Notify_BattleServer(this);
    }

    /// <summary>Field number for the "ServerUUID" field.</summary>
    public const int ServerUUIDFieldNumber = 1;
    private string serverUUID_ = "";
    /// <summary>
    ///战斗服务器ID 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerUUID {
      get { return serverUUID_; }
      set {
        serverUUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Server" field.</summary>
    public const int ServerFieldNumber = 2;
    private global::Proto.GameServerInfo server_;
    /// <summary>
    ///战斗服务器地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.GameServerInfo Server {
      get { return server_; }
      set {
        server_ = value;
      }
    }

    /// <summary>Field number for the "LevelID" field.</summary>
    public const int LevelIDFieldNumber = 3;
    private int levelID_;
    /// <summary>
    ///levelid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelID {
      get { return levelID_; }
      set {
        levelID_ = value;
      }
    }

    /// <summary>Field number for the "ReTry" field.</summary>
    public const int ReTryFieldNumber = 4;
    private bool reTry_;
    /// <summary>
    ///重新尝试
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReTry {
      get { return reTry_; }
      set {
        reTry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as N_Notify_BattleServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(N_Notify_BattleServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerUUID != other.ServerUUID) return false;
      if (!object.Equals(Server, other.Server)) return false;
      if (LevelID != other.LevelID) return false;
      if (ReTry != other.ReTry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerUUID.Length != 0) hash ^= ServerUUID.GetHashCode();
      if (server_ != null) hash ^= Server.GetHashCode();
      if (LevelID != 0) hash ^= LevelID.GetHashCode();
      if (ReTry != false) hash ^= ReTry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerUUID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerUUID);
      }
      if (server_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Server);
      }
      if (LevelID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LevelID);
      }
      if (ReTry != false) {
        output.WriteRawTag(32);
        output.WriteBool(ReTry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerUUID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerUUID);
      }
      if (server_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Server);
      }
      if (LevelID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelID);
      }
      if (ReTry != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(N_Notify_BattleServer other) {
      if (other == null) {
        return;
      }
      if (other.ServerUUID.Length != 0) {
        ServerUUID = other.ServerUUID;
      }
      if (other.server_ != null) {
        if (server_ == null) {
          Server = new global::Proto.GameServerInfo();
        }
        Server.MergeFrom(other.Server);
      }
      if (other.LevelID != 0) {
        LevelID = other.LevelID;
      }
      if (other.ReTry != false) {
        ReTry = other.ReTry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServerUUID = input.ReadString();
            break;
          }
          case 18: {
            if (server_ == null) {
              Server = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(Server);
            break;
          }
          case 24: {
            LevelID = input.ReadInt32();
            break;
          }
          case 32: {
            ReTry = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ServerUUID = input.ReadString();
            break;
          }
          case 18: {
            if (server_ == null) {
              Server = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(Server);
            break;
          }
          case 24: {
            LevelID = input.ReadInt32();
            break;
          }
          case 32: {
            ReTry = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///通知mathcgroup
  /// </summary>
  public sealed partial class N_Notify_MatchGroup : pb::IMessage<N_Notify_MatchGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<N_Notify_MatchGroup> _parser = new pb::MessageParser<N_Notify_MatchGroup>(() => new N_Notify_MatchGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<N_Notify_MatchGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.NotifyPushMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public N_Notify_MatchGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public N_Notify_MatchGroup(N_Notify_MatchGroup other) : this() {
      levelID_ = other.levelID_;
      players_ = other.players_.Clone();
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public N_Notify_MatchGroup Clone() {
      return new N_Notify_MatchGroup(this);
    }

    /// <summary>Field number for the "LevelID" field.</summary>
    public const int LevelIDFieldNumber = 1;
    private int levelID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelID {
      get { return levelID_; }
      set {
        levelID_ = value;
      }
    }

    /// <summary>Field number for the "Players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto.MatchPlayer> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Proto.MatchPlayer.Parser);
    private readonly pbc::RepeatedField<global::Proto.MatchPlayer> players_ = new pbc::RepeatedField<global::Proto.MatchPlayer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.MatchPlayer> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as N_Notify_MatchGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(N_Notify_MatchGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LevelID != other.LevelID) return false;
      if(!players_.Equals(other.players_)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LevelID != 0) hash ^= LevelID.GetHashCode();
      hash ^= players_.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LevelID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LevelID);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LevelID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelID);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(N_Notify_MatchGroup other) {
      if (other == null) {
        return;
      }
      if (other.LevelID != 0) {
        LevelID = other.LevelID;
      }
      players_.Add(other.players_);
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LevelID = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LevelID = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///邀请通知
  /// </summary>
  public sealed partial class N_Notify_InviteJoinMatchGroup : pb::IMessage<N_Notify_InviteJoinMatchGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<N_Notify_InviteJoinMatchGroup> _parser = new pb::MessageParser<N_Notify_InviteJoinMatchGroup>(() => new N_Notify_InviteJoinMatchGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<N_Notify_InviteJoinMatchGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.NotifyPushMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public N_Notify_InviteJoinMatchGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public N_Notify_InviteJoinMatchGroup(N_Notify_InviteJoinMatchGroup other) : this() {
      levelID_ = other.levelID_;
      groupId_ = other.groupId_;
      inviter_ = other.inviter_ != null ? other.inviter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public N_Notify_InviteJoinMatchGroup Clone() {
      return new N_Notify_InviteJoinMatchGroup(this);
    }

    /// <summary>Field number for the "LevelID" field.</summary>
    public const int LevelIDFieldNumber = 1;
    private int levelID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelID {
      get { return levelID_; }
      set {
        levelID_ = value;
      }
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private string groupId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Inviter" field.</summary>
    public const int InviterFieldNumber = 3;
    private global::Proto.MatchPlayer inviter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.MatchPlayer Inviter {
      get { return inviter_; }
      set {
        inviter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as N_Notify_InviteJoinMatchGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(N_Notify_InviteJoinMatchGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LevelID != other.LevelID) return false;
      if (GroupId != other.GroupId) return false;
      if (!object.Equals(Inviter, other.Inviter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LevelID != 0) hash ^= LevelID.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (inviter_ != null) hash ^= Inviter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LevelID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LevelID);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupId);
      }
      if (inviter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Inviter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LevelID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelID);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (inviter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inviter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(N_Notify_InviteJoinMatchGroup other) {
      if (other == null) {
        return;
      }
      if (other.LevelID != 0) {
        LevelID = other.LevelID;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      if (other.inviter_ != null) {
        if (inviter_ == null) {
          Inviter = new global::Proto.MatchPlayer();
        }
        Inviter.MergeFrom(other.Inviter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LevelID = input.ReadInt32();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            if (inviter_ == null) {
              Inviter = new global::Proto.MatchPlayer();
            }
            input.ReadMessage(Inviter);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LevelID = input.ReadInt32();
            break;
          }
          case 18: {
            GroupId = input.ReadString();
            break;
          }
          case 26: {
            if (inviter_ == null) {
              Inviter = new global::Proto.MatchPlayer();
            }
            input.ReadMessage(Inviter);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
