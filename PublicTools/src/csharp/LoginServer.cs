// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: login_server.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from login_server.proto</summary>
  public static partial class LoginServerReflection {

    #region Descriptor
    /// <summary>File descriptor for login_server.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoginServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJsb2dpbl9zZXJ2ZXIucHJvdG8SBVByb3RvGgpkYXRhLnByb3RvGgtjb25z",
            "dC5wcm90bxoQZXhjZWxjb25zdC5wcm90byJACglDMkxfTG9naW4SDwoHVmVy",
            "c2lvbhgBIAEoBRIQCghVc2VyTmFtZRgCIAEoCRIQCghQYXNzd29yZBgDIAEo",
            "CSKiAQoJTDJDX0xvZ2luEh4KBENvZGUYASABKA4yEC5Qcm90by5FcnJvckNv",
            "ZGUSDgoGVXNlcklEGAIgASgJEg8KB1Nlc3Npb24YAyABKAkSKQoKR2F0ZVNl",
            "cnZlchgEIAEoCzIVLlByb3RvLkdhbWVTZXJ2ZXJJbmZvEikKCkNoYXRTZXJ2",
            "ZXIYBSABKAsyFS5Qcm90by5HYW1lU2VydmVySW5mbyI+CgdDMkxfUmVnEg8K",
            "B1ZlcnNpb24YASABKAUSEAoIVXNlck5hbWUYAiABKAkSEAoIUGFzc3dvcmQY",
            "AyABKAkioAEKB0wyQ19SZWcSHgoEQ29kZRgBIAEoDjIQLlByb3RvLkVycm9y",
            "Q29kZRIPCgdTZXNzaW9uGAIgASgJEg4KBlVzZXJJRBgDIAEoCRIpCgpHYXRl",
            "U2VydmVyGAQgASgLMhUuUHJvdG8uR2FtZVNlcnZlckluZm8SKQoKQ2hhdFNl",
            "cnZlchgGIAEoCzIVLlByb3RvLkdhbWVTZXJ2ZXJJbmZvIjMKEFMyTF9DaGVj",
            "a1Nlc3Npb24SDgoGVXNlcklEGAEgASgJEg8KB1Nlc3Npb24YAiABKAkiZgoQ",
            "TDJTX0NoZWNrU2Vzc2lvbhIeCgRDb2RlGAEgASgOMhAuUHJvdG8uRXJyb3JD",
            "b2RlEjIKE0dhdGVTZXJ2ZXJJbm5lckhvc3QYAiABKAsyFS5Qcm90by5TZXJ2",
            "aWNlQWRkcmVzczJsChJMb2dpblNlcnZlclNlcnZpY2USLQoFTG9naW4SEC5Q",
            "cm90by5DMkxfTG9naW4aEC5Qcm90by5MMkNfTG9naW4iABInCgNSZWcSDi5Q",
            "cm90by5DMkxfUmVnGg4uUHJvdG8uTDJDX1JlZyIAMmAKHExvZ2luQmF0dGxl",
            "R2FtZVNlcnZlclNlcnZpY2USQAoMQ2hlY2tTZXNzaW9uEhcuUHJvdG8uUzJM",
            "X0NoZWNrU2Vzc2lvbhoXLlByb3RvLkwyU19DaGVja1Nlc3Npb25iBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.DataReflection.Descriptor, global::Proto.ConstReflection.Descriptor, global::Proto.ExcelconstReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.C2L_Login), global::Proto.C2L_Login.Parser, new[]{ "Version", "UserName", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.L2C_Login), global::Proto.L2C_Login.Parser, new[]{ "Code", "UserID", "Session", "GateServer", "ChatServer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.C2L_Reg), global::Proto.C2L_Reg.Parser, new[]{ "Version", "UserName", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.L2C_Reg), global::Proto.L2C_Reg.Parser, new[]{ "Code", "Session", "UserID", "GateServer", "ChatServer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.S2L_CheckSession), global::Proto.S2L_CheckSession.Parser, new[]{ "UserID", "Session" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.L2S_CheckSession), global::Proto.L2S_CheckSession.Parser, new[]{ "Code", "GateServerInnerHost" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///登陆
  /// </summary>
  public sealed partial class C2L_Login : pb::IMessage<C2L_Login>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C2L_Login> _parser = new pb::MessageParser<C2L_Login>(() => new C2L_Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2L_Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.LoginServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2L_Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2L_Login(C2L_Login other) : this() {
      version_ = other.version_;
      userName_ = other.userName_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2L_Login Clone() {
      return new C2L_Login(this);
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    /// <summary>
    ///登陆token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2L_Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2L_Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2L_Login other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///登陆返回
  /// </summary>
  public sealed partial class L2C_Login : pb::IMessage<L2C_Login>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<L2C_Login> _parser = new pb::MessageParser<L2C_Login>(() => new L2C_Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<L2C_Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.LoginServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2C_Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2C_Login(L2C_Login other) : this() {
      code_ = other.code_;
      userID_ = other.userID_;
      session_ = other.session_;
      gateServer_ = other.gateServer_ != null ? other.gateServer_.Clone() : null;
      chatServer_ = other.chatServer_ != null ? other.chatServer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2C_Login Clone() {
      return new L2C_Login(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Proto.ErrorCode code_ = global::Proto.ErrorCode.Error;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.ErrorCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "UserID" field.</summary>
    public const int UserIDFieldNumber = 2;
    private string userID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Session" field.</summary>
    public const int SessionFieldNumber = 3;
    private string session_ = "";
    /// <summary>
    ///session
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GateServer" field.</summary>
    public const int GateServerFieldNumber = 4;
    private global::Proto.GameServerInfo gateServer_;
    /// <summary>
    ///所属服务器
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.GameServerInfo GateServer {
      get { return gateServer_; }
      set {
        gateServer_ = value;
      }
    }

    /// <summary>Field number for the "ChatServer" field.</summary>
    public const int ChatServerFieldNumber = 5;
    private global::Proto.GameServerInfo chatServer_;
    /// <summary>
    ///分配到的chat server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.GameServerInfo ChatServer {
      get { return chatServer_; }
      set {
        chatServer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as L2C_Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(L2C_Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (UserID != other.UserID) return false;
      if (Session != other.Session) return false;
      if (!object.Equals(GateServer, other.GateServer)) return false;
      if (!object.Equals(ChatServer, other.ChatServer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Proto.ErrorCode.Error) hash ^= Code.GetHashCode();
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (gateServer_ != null) hash ^= GateServer.GetHashCode();
      if (chatServer_ != null) hash ^= ChatServer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != global::Proto.ErrorCode.Error) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserID);
      }
      if (Session.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Session);
      }
      if (gateServer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GateServer);
      }
      if (chatServer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ChatServer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Proto.ErrorCode.Error) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (gateServer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GateServer);
      }
      if (chatServer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatServer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(L2C_Login other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Proto.ErrorCode.Error) {
        Code = other.Code;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.gateServer_ != null) {
        if (gateServer_ == null) {
          GateServer = new global::Proto.GameServerInfo();
        }
        GateServer.MergeFrom(other.GateServer);
      }
      if (other.chatServer_ != null) {
        if (chatServer_ == null) {
          ChatServer = new global::Proto.GameServerInfo();
        }
        ChatServer.MergeFrom(other.ChatServer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Proto.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            UserID = input.ReadString();
            break;
          }
          case 26: {
            Session = input.ReadString();
            break;
          }
          case 34: {
            if (gateServer_ == null) {
              GateServer = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(GateServer);
            break;
          }
          case 42: {
            if (chatServer_ == null) {
              ChatServer = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(ChatServer);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Proto.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            UserID = input.ReadString();
            break;
          }
          case 26: {
            Session = input.ReadString();
            break;
          }
          case 34: {
            if (gateServer_ == null) {
              GateServer = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(GateServer);
            break;
          }
          case 42: {
            if (chatServer_ == null) {
              ChatServer = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(ChatServer);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///注册用户
  /// </summary>
  public sealed partial class C2L_Reg : pb::IMessage<C2L_Reg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C2L_Reg> _parser = new pb::MessageParser<C2L_Reg>(() => new C2L_Reg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2L_Reg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.LoginServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2L_Reg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2L_Reg(C2L_Reg other) : this() {
      version_ = other.version_;
      userName_ = other.userName_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2L_Reg Clone() {
      return new C2L_Reg(this);
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2L_Reg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2L_Reg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2L_Reg other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///注册返回
  /// </summary>
  public sealed partial class L2C_Reg : pb::IMessage<L2C_Reg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<L2C_Reg> _parser = new pb::MessageParser<L2C_Reg>(() => new L2C_Reg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<L2C_Reg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.LoginServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2C_Reg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2C_Reg(L2C_Reg other) : this() {
      code_ = other.code_;
      session_ = other.session_;
      userID_ = other.userID_;
      gateServer_ = other.gateServer_ != null ? other.gateServer_.Clone() : null;
      chatServer_ = other.chatServer_ != null ? other.chatServer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2C_Reg Clone() {
      return new L2C_Reg(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Proto.ErrorCode code_ = global::Proto.ErrorCode.Error;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.ErrorCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Session" field.</summary>
    public const int SessionFieldNumber = 2;
    private string session_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserID" field.</summary>
    public const int UserIDFieldNumber = 3;
    private string userID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GateServer" field.</summary>
    public const int GateServerFieldNumber = 4;
    private global::Proto.GameServerInfo gateServer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.GameServerInfo GateServer {
      get { return gateServer_; }
      set {
        gateServer_ = value;
      }
    }

    /// <summary>Field number for the "ChatServer" field.</summary>
    public const int ChatServerFieldNumber = 6;
    private global::Proto.GameServerInfo chatServer_;
    /// <summary>
    ///分配到的chat server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.GameServerInfo ChatServer {
      get { return chatServer_; }
      set {
        chatServer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as L2C_Reg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(L2C_Reg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Session != other.Session) return false;
      if (UserID != other.UserID) return false;
      if (!object.Equals(GateServer, other.GateServer)) return false;
      if (!object.Equals(ChatServer, other.ChatServer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Proto.ErrorCode.Error) hash ^= Code.GetHashCode();
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (gateServer_ != null) hash ^= GateServer.GetHashCode();
      if (chatServer_ != null) hash ^= ChatServer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != global::Proto.ErrorCode.Error) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Session.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Session);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserID);
      }
      if (gateServer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GateServer);
      }
      if (chatServer_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ChatServer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Proto.ErrorCode.Error) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (gateServer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GateServer);
      }
      if (chatServer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatServer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(L2C_Reg other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Proto.ErrorCode.Error) {
        Code = other.Code;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.gateServer_ != null) {
        if (gateServer_ == null) {
          GateServer = new global::Proto.GameServerInfo();
        }
        GateServer.MergeFrom(other.GateServer);
      }
      if (other.chatServer_ != null) {
        if (chatServer_ == null) {
          ChatServer = new global::Proto.GameServerInfo();
        }
        ChatServer.MergeFrom(other.ChatServer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Proto.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            Session = input.ReadString();
            break;
          }
          case 26: {
            UserID = input.ReadString();
            break;
          }
          case 34: {
            if (gateServer_ == null) {
              GateServer = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(GateServer);
            break;
          }
          case 50: {
            if (chatServer_ == null) {
              ChatServer = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(ChatServer);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Proto.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            Session = input.ReadString();
            break;
          }
          case 26: {
            UserID = input.ReadString();
            break;
          }
          case 34: {
            if (gateServer_ == null) {
              GateServer = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(GateServer);
            break;
          }
          case 50: {
            if (chatServer_ == null) {
              ChatServer = new global::Proto.GameServerInfo();
            }
            input.ReadMessage(ChatServer);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///检查session是否有效
  /// </summary>
  public sealed partial class S2L_CheckSession : pb::IMessage<S2L_CheckSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S2L_CheckSession> _parser = new pb::MessageParser<S2L_CheckSession>(() => new S2L_CheckSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2L_CheckSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.LoginServerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2L_CheckSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2L_CheckSession(S2L_CheckSession other) : this() {
      userID_ = other.userID_;
      session_ = other.session_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2L_CheckSession Clone() {
      return new S2L_CheckSession(this);
    }

    /// <summary>Field number for the "UserID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private string userID_ = "";
    /// <summary>
    ///玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Session" field.</summary>
    public const int SessionFieldNumber = 2;
    private string session_ = "";
    /// <summary>
    ///当前登陆信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Session {
      get { return session_; }
      set {
        session_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2L_CheckSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2L_CheckSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (Session != other.Session) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (Session.Length != 0) hash ^= Session.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserID);
      }
      if (Session.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Session);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (Session.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Session);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2L_CheckSession other) {
      if (other == null) {
        return;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.Session.Length != 0) {
        Session = other.Session;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserID = input.ReadString();
            break;
          }
          case 18: {
            Session = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserID = input.ReadString();
            break;
          }
          case 18: {
            Session = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///返回检查session结果
  /// </summary>
  public sealed partial class L2S_CheckSession : pb::IMessage<L2S_CheckSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<L2S_CheckSession> _parser = new pb::MessageParser<L2S_CheckSession>(() => new L2S_CheckSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<L2S_CheckSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.LoginServerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2S_CheckSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2S_CheckSession(L2S_CheckSession other) : this() {
      code_ = other.code_;
      gateServerInnerHost_ = other.gateServerInnerHost_ != null ? other.gateServerInnerHost_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public L2S_CheckSession Clone() {
      return new L2S_CheckSession(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Proto.ErrorCode code_ = global::Proto.ErrorCode.Error;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.ErrorCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "GateServerInnerHost" field.</summary>
    public const int GateServerInnerHostFieldNumber = 2;
    private global::Proto.ServiceAddress gateServerInnerHost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.ServiceAddress GateServerInnerHost {
      get { return gateServerInnerHost_; }
      set {
        gateServerInnerHost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as L2S_CheckSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(L2S_CheckSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(GateServerInnerHost, other.GateServerInnerHost)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Proto.ErrorCode.Error) hash ^= Code.GetHashCode();
      if (gateServerInnerHost_ != null) hash ^= GateServerInnerHost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != global::Proto.ErrorCode.Error) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (gateServerInnerHost_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GateServerInnerHost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Proto.ErrorCode.Error) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (gateServerInnerHost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GateServerInnerHost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(L2S_CheckSession other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Proto.ErrorCode.Error) {
        Code = other.Code;
      }
      if (other.gateServerInnerHost_ != null) {
        if (gateServerInnerHost_ == null) {
          GateServerInnerHost = new global::Proto.ServiceAddress();
        }
        GateServerInnerHost.MergeFrom(other.GateServerInnerHost);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Proto.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (gateServerInnerHost_ == null) {
              GateServerInnerHost = new global::Proto.ServiceAddress();
            }
            input.ReadMessage(GateServerInnerHost);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Proto.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (gateServerInnerHost_ == null) {
              GateServerInnerHost = new global::Proto.ServiceAddress();
            }
            input.ReadMessage(GateServerInnerHost);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
