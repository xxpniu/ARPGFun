// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gate_server.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Proto {
  public static partial class GateServerService
  {
    static readonly string __ServiceName = "Proto.GateServerService";

    static readonly grpc::Marshaller<global::Proto.C2G_Login> __Marshaller_Proto_C2G_Login = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_Login.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_Login> __Marshaller_Proto_G2C_Login = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_Login.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_CreateHero> __Marshaller_Proto_C2G_CreateHero = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_CreateHero.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_CreateHero> __Marshaller_Proto_G2C_CreateHero = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_CreateHero.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_BeginGame> __Marshaller_Proto_C2G_BeginGame = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_BeginGame.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_BeginGame> __Marshaller_Proto_G2C_BeginGame = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_BeginGame.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_OperatorEquip> __Marshaller_Proto_C2G_OperatorEquip = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_OperatorEquip.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_OperatorEquip> __Marshaller_Proto_G2C_OperatorEquip = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_OperatorEquip.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_SaleItem> __Marshaller_Proto_C2G_SaleItem = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_SaleItem.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_SaleItem> __Marshaller_Proto_G2C_SaleItem = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_SaleItem.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_EquipmentLevelUp> __Marshaller_Proto_C2G_EquipmentLevelUp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_EquipmentLevelUp.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_EquipmentLevelUp> __Marshaller_Proto_G2C_EquipmentLevelUp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_EquipmentLevelUp.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_GMTool> __Marshaller_Proto_C2G_GMTool = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_GMTool.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_GMTool> __Marshaller_Proto_G2C_GMTool = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_GMTool.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_BuyPackageSize> __Marshaller_Proto_C2G_BuyPackageSize = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_BuyPackageSize.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_BuyPackageSize> __Marshaller_Proto_G2C_BuyPackageSize = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_BuyPackageSize.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_MagicLevelUp> __Marshaller_Proto_C2G_MagicLevelUp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_MagicLevelUp.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_MagicLevelUp> __Marshaller_Proto_G2C_MagicLevelUp = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_MagicLevelUp.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_Shop> __Marshaller_Proto_C2G_Shop = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_Shop.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_Shop> __Marshaller_Proto_G2C_Shop = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_Shop.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_BuyItem> __Marshaller_Proto_C2G_BuyItem = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_BuyItem.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_BuyItem> __Marshaller_Proto_G2C_BuyItem = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_BuyItem.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_BuyGold> __Marshaller_Proto_C2G_BuyGold = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_BuyGold.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_BuyGold> __Marshaller_Proto_G2C_BuyGold = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_BuyGold.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_RefreshEquip> __Marshaller_Proto_C2G_RefreshEquip = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_RefreshEquip.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_RefreshEquip> __Marshaller_Proto_G2C_RefreshEquip = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_RefreshEquip.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_ActiveMagic> __Marshaller_Proto_C2G_ActiveMagic = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_ActiveMagic.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_ActiveMagic> __Marshaller_Proto_G2C_ActiveMagic = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_ActiveMagic.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_SearchPlayer> __Marshaller_Proto_C2G_SearchPlayer = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_SearchPlayer.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_SearchPlayer> __Marshaller_Proto_G2C_SearchPlayer = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_SearchPlayer.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_CreateMatch> __Marshaller_Proto_C2G_CreateMatch = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_CreateMatch.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_CreateMatch> __Marshaller_Proto_G2C_CreateMatch = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_CreateMatch.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_JoinMatch> __Marshaller_Proto_C2G_JoinMatch = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_JoinMatch.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_JoinMatch> __Marshaller_Proto_G2C_JoinMatch = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_JoinMatch.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_InviteJoinMatch> __Marshaller_Proto_C2G_InviteJoinMatch = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_InviteJoinMatch.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_InviteJoinMatch> __Marshaller_Proto_G2C_InviteJoinMatch = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_InviteJoinMatch.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_LeaveMatchGroup> __Marshaller_Proto_C2G_LeaveMatchGroup = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_LeaveMatchGroup.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_LeaveMatchGroup> __Marshaller_Proto_G2C_LeaveMatchGroup = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_LeaveMatchGroup.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.C2G_ReloadMatchState> __Marshaller_Proto_C2G_ReloadMatchState = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.C2G_ReloadMatchState.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2C_ReloadMatchState> __Marshaller_Proto_G2C_ReloadMatchState = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2C_ReloadMatchState.Parser.ParseFrom);

    static readonly grpc::Method<global::Proto.C2G_Login, global::Proto.G2C_Login> __Method_Login = new grpc::Method<global::Proto.C2G_Login, global::Proto.G2C_Login>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_Proto_C2G_Login,
        __Marshaller_Proto_G2C_Login);

    static readonly grpc::Method<global::Proto.C2G_CreateHero, global::Proto.G2C_CreateHero> __Method_CreateHero = new grpc::Method<global::Proto.C2G_CreateHero, global::Proto.G2C_CreateHero>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateHero",
        __Marshaller_Proto_C2G_CreateHero,
        __Marshaller_Proto_G2C_CreateHero);

    static readonly grpc::Method<global::Proto.C2G_BeginGame, global::Proto.G2C_BeginGame> __Method_BeginGame = new grpc::Method<global::Proto.C2G_BeginGame, global::Proto.G2C_BeginGame>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BeginGame",
        __Marshaller_Proto_C2G_BeginGame,
        __Marshaller_Proto_G2C_BeginGame);

    static readonly grpc::Method<global::Proto.C2G_OperatorEquip, global::Proto.G2C_OperatorEquip> __Method_OperatorEquip = new grpc::Method<global::Proto.C2G_OperatorEquip, global::Proto.G2C_OperatorEquip>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OperatorEquip",
        __Marshaller_Proto_C2G_OperatorEquip,
        __Marshaller_Proto_G2C_OperatorEquip);

    static readonly grpc::Method<global::Proto.C2G_SaleItem, global::Proto.G2C_SaleItem> __Method_SaleItem = new grpc::Method<global::Proto.C2G_SaleItem, global::Proto.G2C_SaleItem>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SaleItem",
        __Marshaller_Proto_C2G_SaleItem,
        __Marshaller_Proto_G2C_SaleItem);

    static readonly grpc::Method<global::Proto.C2G_EquipmentLevelUp, global::Proto.G2C_EquipmentLevelUp> __Method_EquipmentLevelUp = new grpc::Method<global::Proto.C2G_EquipmentLevelUp, global::Proto.G2C_EquipmentLevelUp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EquipmentLevelUp",
        __Marshaller_Proto_C2G_EquipmentLevelUp,
        __Marshaller_Proto_G2C_EquipmentLevelUp);

    static readonly grpc::Method<global::Proto.C2G_GMTool, global::Proto.G2C_GMTool> __Method_GMTool = new grpc::Method<global::Proto.C2G_GMTool, global::Proto.G2C_GMTool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GMTool",
        __Marshaller_Proto_C2G_GMTool,
        __Marshaller_Proto_G2C_GMTool);

    static readonly grpc::Method<global::Proto.C2G_BuyPackageSize, global::Proto.G2C_BuyPackageSize> __Method_BuyPackageSize = new grpc::Method<global::Proto.C2G_BuyPackageSize, global::Proto.G2C_BuyPackageSize>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BuyPackageSize",
        __Marshaller_Proto_C2G_BuyPackageSize,
        __Marshaller_Proto_G2C_BuyPackageSize);

    static readonly grpc::Method<global::Proto.C2G_MagicLevelUp, global::Proto.G2C_MagicLevelUp> __Method_MagicLevelUp = new grpc::Method<global::Proto.C2G_MagicLevelUp, global::Proto.G2C_MagicLevelUp>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MagicLevelUp",
        __Marshaller_Proto_C2G_MagicLevelUp,
        __Marshaller_Proto_G2C_MagicLevelUp);

    static readonly grpc::Method<global::Proto.C2G_Shop, global::Proto.G2C_Shop> __Method_QueryShop = new grpc::Method<global::Proto.C2G_Shop, global::Proto.G2C_Shop>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryShop",
        __Marshaller_Proto_C2G_Shop,
        __Marshaller_Proto_G2C_Shop);

    static readonly grpc::Method<global::Proto.C2G_BuyItem, global::Proto.G2C_BuyItem> __Method_BuyItem = new grpc::Method<global::Proto.C2G_BuyItem, global::Proto.G2C_BuyItem>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BuyItem",
        __Marshaller_Proto_C2G_BuyItem,
        __Marshaller_Proto_G2C_BuyItem);

    static readonly grpc::Method<global::Proto.C2G_BuyGold, global::Proto.G2C_BuyGold> __Method_BuyGold = new grpc::Method<global::Proto.C2G_BuyGold, global::Proto.G2C_BuyGold>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BuyGold",
        __Marshaller_Proto_C2G_BuyGold,
        __Marshaller_Proto_G2C_BuyGold);

    static readonly grpc::Method<global::Proto.C2G_RefreshEquip, global::Proto.G2C_RefreshEquip> __Method_RefreshEquip = new grpc::Method<global::Proto.C2G_RefreshEquip, global::Proto.G2C_RefreshEquip>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RefreshEquip",
        __Marshaller_Proto_C2G_RefreshEquip,
        __Marshaller_Proto_G2C_RefreshEquip);

    static readonly grpc::Method<global::Proto.C2G_ActiveMagic, global::Proto.G2C_ActiveMagic> __Method_ActiveMagic = new grpc::Method<global::Proto.C2G_ActiveMagic, global::Proto.G2C_ActiveMagic>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ActiveMagic",
        __Marshaller_Proto_C2G_ActiveMagic,
        __Marshaller_Proto_G2C_ActiveMagic);

    static readonly grpc::Method<global::Proto.C2G_SearchPlayer, global::Proto.G2C_SearchPlayer> __Method_SearchPlayer = new grpc::Method<global::Proto.C2G_SearchPlayer, global::Proto.G2C_SearchPlayer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchPlayer",
        __Marshaller_Proto_C2G_SearchPlayer,
        __Marshaller_Proto_G2C_SearchPlayer);

    static readonly grpc::Method<global::Proto.C2G_CreateMatch, global::Proto.G2C_CreateMatch> __Method_CreateMatch = new grpc::Method<global::Proto.C2G_CreateMatch, global::Proto.G2C_CreateMatch>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateMatch",
        __Marshaller_Proto_C2G_CreateMatch,
        __Marshaller_Proto_G2C_CreateMatch);

    static readonly grpc::Method<global::Proto.C2G_JoinMatch, global::Proto.G2C_JoinMatch> __Method_JoinMatch = new grpc::Method<global::Proto.C2G_JoinMatch, global::Proto.G2C_JoinMatch>(
        grpc::MethodType.Unary,
        __ServiceName,
        "JoinMatch",
        __Marshaller_Proto_C2G_JoinMatch,
        __Marshaller_Proto_G2C_JoinMatch);

    static readonly grpc::Method<global::Proto.C2G_InviteJoinMatch, global::Proto.G2C_InviteJoinMatch> __Method_InviteJoinMatch = new grpc::Method<global::Proto.C2G_InviteJoinMatch, global::Proto.G2C_InviteJoinMatch>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InviteJoinMatch",
        __Marshaller_Proto_C2G_InviteJoinMatch,
        __Marshaller_Proto_G2C_InviteJoinMatch);

    static readonly grpc::Method<global::Proto.C2G_LeaveMatchGroup, global::Proto.G2C_LeaveMatchGroup> __Method_LeaveMatchGroup = new grpc::Method<global::Proto.C2G_LeaveMatchGroup, global::Proto.G2C_LeaveMatchGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LeaveMatchGroup",
        __Marshaller_Proto_C2G_LeaveMatchGroup,
        __Marshaller_Proto_G2C_LeaveMatchGroup);

    static readonly grpc::Method<global::Proto.C2G_ReloadMatchState, global::Proto.G2C_ReloadMatchState> __Method_ReloadMatchState = new grpc::Method<global::Proto.C2G_ReloadMatchState, global::Proto.G2C_ReloadMatchState>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReloadMatchState",
        __Marshaller_Proto_C2G_ReloadMatchState,
        __Marshaller_Proto_G2C_ReloadMatchState);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.GateServerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GateServerService</summary>
    [grpc::BindServiceMethod(typeof(GateServerService), "BindService")]
    public abstract partial class GateServerServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_Login> Login(global::Proto.C2G_Login request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_CreateHero> CreateHero(global::Proto.C2G_CreateHero request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_BeginGame> BeginGame(global::Proto.C2G_BeginGame request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_OperatorEquip> OperatorEquip(global::Proto.C2G_OperatorEquip request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_SaleItem> SaleItem(global::Proto.C2G_SaleItem request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_EquipmentLevelUp> EquipmentLevelUp(global::Proto.C2G_EquipmentLevelUp request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_GMTool> GMTool(global::Proto.C2G_GMTool request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_BuyPackageSize> BuyPackageSize(global::Proto.C2G_BuyPackageSize request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_MagicLevelUp> MagicLevelUp(global::Proto.C2G_MagicLevelUp request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_Shop> QueryShop(global::Proto.C2G_Shop request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_BuyItem> BuyItem(global::Proto.C2G_BuyItem request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_BuyGold> BuyGold(global::Proto.C2G_BuyGold request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_RefreshEquip> RefreshEquip(global::Proto.C2G_RefreshEquip request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_ActiveMagic> ActiveMagic(global::Proto.C2G_ActiveMagic request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_SearchPlayer> SearchPlayer(global::Proto.C2G_SearchPlayer request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///create
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_CreateMatch> CreateMatch(global::Proto.C2G_CreateMatch request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///join match
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_JoinMatch> JoinMatch(global::Proto.C2G_JoinMatch request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_InviteJoinMatch> InviteJoinMatch(global::Proto.C2G_InviteJoinMatch request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_LeaveMatchGroup> LeaveMatchGroup(global::Proto.C2G_LeaveMatchGroup request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2C_ReloadMatchState> ReloadMatchState(global::Proto.C2G_ReloadMatchState request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GateServerService</summary>
    public partial class GateServerServiceClient : grpc::ClientBase<GateServerServiceClient>
    {
      /// <summary>Creates a new client for GateServerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GateServerServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GateServerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GateServerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GateServerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GateServerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Proto.G2C_Login Login(global::Proto.C2G_Login request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_Login Login(global::Proto.C2G_Login request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_Login> LoginAsync(global::Proto.C2G_Login request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_Login> LoginAsync(global::Proto.C2G_Login request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      public virtual global::Proto.G2C_CreateHero CreateHero(global::Proto.C2G_CreateHero request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHero(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_CreateHero CreateHero(global::Proto.C2G_CreateHero request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateHero, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_CreateHero> CreateHeroAsync(global::Proto.C2G_CreateHero request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateHeroAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_CreateHero> CreateHeroAsync(global::Proto.C2G_CreateHero request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateHero, null, options, request);
      }
      public virtual global::Proto.G2C_BeginGame BeginGame(global::Proto.C2G_BeginGame request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BeginGame(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_BeginGame BeginGame(global::Proto.C2G_BeginGame request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BeginGame, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_BeginGame> BeginGameAsync(global::Proto.C2G_BeginGame request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BeginGameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_BeginGame> BeginGameAsync(global::Proto.C2G_BeginGame request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BeginGame, null, options, request);
      }
      public virtual global::Proto.G2C_OperatorEquip OperatorEquip(global::Proto.C2G_OperatorEquip request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OperatorEquip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_OperatorEquip OperatorEquip(global::Proto.C2G_OperatorEquip request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OperatorEquip, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_OperatorEquip> OperatorEquipAsync(global::Proto.C2G_OperatorEquip request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OperatorEquipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_OperatorEquip> OperatorEquipAsync(global::Proto.C2G_OperatorEquip request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OperatorEquip, null, options, request);
      }
      public virtual global::Proto.G2C_SaleItem SaleItem(global::Proto.C2G_SaleItem request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaleItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_SaleItem SaleItem(global::Proto.C2G_SaleItem request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SaleItem, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_SaleItem> SaleItemAsync(global::Proto.C2G_SaleItem request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaleItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_SaleItem> SaleItemAsync(global::Proto.C2G_SaleItem request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SaleItem, null, options, request);
      }
      public virtual global::Proto.G2C_EquipmentLevelUp EquipmentLevelUp(global::Proto.C2G_EquipmentLevelUp request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EquipmentLevelUp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_EquipmentLevelUp EquipmentLevelUp(global::Proto.C2G_EquipmentLevelUp request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EquipmentLevelUp, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_EquipmentLevelUp> EquipmentLevelUpAsync(global::Proto.C2G_EquipmentLevelUp request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EquipmentLevelUpAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_EquipmentLevelUp> EquipmentLevelUpAsync(global::Proto.C2G_EquipmentLevelUp request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EquipmentLevelUp, null, options, request);
      }
      public virtual global::Proto.G2C_GMTool GMTool(global::Proto.C2G_GMTool request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GMTool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_GMTool GMTool(global::Proto.C2G_GMTool request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GMTool, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_GMTool> GMToolAsync(global::Proto.C2G_GMTool request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GMToolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_GMTool> GMToolAsync(global::Proto.C2G_GMTool request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GMTool, null, options, request);
      }
      public virtual global::Proto.G2C_BuyPackageSize BuyPackageSize(global::Proto.C2G_BuyPackageSize request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BuyPackageSize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_BuyPackageSize BuyPackageSize(global::Proto.C2G_BuyPackageSize request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BuyPackageSize, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_BuyPackageSize> BuyPackageSizeAsync(global::Proto.C2G_BuyPackageSize request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BuyPackageSizeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_BuyPackageSize> BuyPackageSizeAsync(global::Proto.C2G_BuyPackageSize request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BuyPackageSize, null, options, request);
      }
      public virtual global::Proto.G2C_MagicLevelUp MagicLevelUp(global::Proto.C2G_MagicLevelUp request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MagicLevelUp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_MagicLevelUp MagicLevelUp(global::Proto.C2G_MagicLevelUp request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MagicLevelUp, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_MagicLevelUp> MagicLevelUpAsync(global::Proto.C2G_MagicLevelUp request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MagicLevelUpAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_MagicLevelUp> MagicLevelUpAsync(global::Proto.C2G_MagicLevelUp request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MagicLevelUp, null, options, request);
      }
      public virtual global::Proto.G2C_Shop QueryShop(global::Proto.C2G_Shop request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryShop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_Shop QueryShop(global::Proto.C2G_Shop request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryShop, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_Shop> QueryShopAsync(global::Proto.C2G_Shop request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryShopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_Shop> QueryShopAsync(global::Proto.C2G_Shop request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryShop, null, options, request);
      }
      public virtual global::Proto.G2C_BuyItem BuyItem(global::Proto.C2G_BuyItem request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BuyItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_BuyItem BuyItem(global::Proto.C2G_BuyItem request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BuyItem, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_BuyItem> BuyItemAsync(global::Proto.C2G_BuyItem request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BuyItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_BuyItem> BuyItemAsync(global::Proto.C2G_BuyItem request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BuyItem, null, options, request);
      }
      public virtual global::Proto.G2C_BuyGold BuyGold(global::Proto.C2G_BuyGold request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BuyGold(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_BuyGold BuyGold(global::Proto.C2G_BuyGold request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BuyGold, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_BuyGold> BuyGoldAsync(global::Proto.C2G_BuyGold request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BuyGoldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_BuyGold> BuyGoldAsync(global::Proto.C2G_BuyGold request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BuyGold, null, options, request);
      }
      public virtual global::Proto.G2C_RefreshEquip RefreshEquip(global::Proto.C2G_RefreshEquip request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshEquip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_RefreshEquip RefreshEquip(global::Proto.C2G_RefreshEquip request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RefreshEquip, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_RefreshEquip> RefreshEquipAsync(global::Proto.C2G_RefreshEquip request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshEquipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_RefreshEquip> RefreshEquipAsync(global::Proto.C2G_RefreshEquip request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RefreshEquip, null, options, request);
      }
      public virtual global::Proto.G2C_ActiveMagic ActiveMagic(global::Proto.C2G_ActiveMagic request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActiveMagic(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_ActiveMagic ActiveMagic(global::Proto.C2G_ActiveMagic request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ActiveMagic, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_ActiveMagic> ActiveMagicAsync(global::Proto.C2G_ActiveMagic request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActiveMagicAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_ActiveMagic> ActiveMagicAsync(global::Proto.C2G_ActiveMagic request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ActiveMagic, null, options, request);
      }
      public virtual global::Proto.G2C_SearchPlayer SearchPlayer(global::Proto.C2G_SearchPlayer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchPlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_SearchPlayer SearchPlayer(global::Proto.C2G_SearchPlayer request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchPlayer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_SearchPlayer> SearchPlayerAsync(global::Proto.C2G_SearchPlayer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchPlayerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_SearchPlayer> SearchPlayerAsync(global::Proto.C2G_SearchPlayer request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchPlayer, null, options, request);
      }
      /// <summary>
      ///create
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.G2C_CreateMatch CreateMatch(global::Proto.C2G_CreateMatch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMatch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///create
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.G2C_CreateMatch CreateMatch(global::Proto.C2G_CreateMatch request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateMatch, null, options, request);
      }
      /// <summary>
      ///create
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_CreateMatch> CreateMatchAsync(global::Proto.C2G_CreateMatch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMatchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///create
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_CreateMatch> CreateMatchAsync(global::Proto.C2G_CreateMatch request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateMatch, null, options, request);
      }
      /// <summary>
      ///join match
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.G2C_JoinMatch JoinMatch(global::Proto.C2G_JoinMatch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinMatch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///join match
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.G2C_JoinMatch JoinMatch(global::Proto.C2G_JoinMatch request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_JoinMatch, null, options, request);
      }
      /// <summary>
      ///join match
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_JoinMatch> JoinMatchAsync(global::Proto.C2G_JoinMatch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinMatchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///join match
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_JoinMatch> JoinMatchAsync(global::Proto.C2G_JoinMatch request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_JoinMatch, null, options, request);
      }
      public virtual global::Proto.G2C_InviteJoinMatch InviteJoinMatch(global::Proto.C2G_InviteJoinMatch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InviteJoinMatch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_InviteJoinMatch InviteJoinMatch(global::Proto.C2G_InviteJoinMatch request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InviteJoinMatch, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_InviteJoinMatch> InviteJoinMatchAsync(global::Proto.C2G_InviteJoinMatch request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InviteJoinMatchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_InviteJoinMatch> InviteJoinMatchAsync(global::Proto.C2G_InviteJoinMatch request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InviteJoinMatch, null, options, request);
      }
      public virtual global::Proto.G2C_LeaveMatchGroup LeaveMatchGroup(global::Proto.C2G_LeaveMatchGroup request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LeaveMatchGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_LeaveMatchGroup LeaveMatchGroup(global::Proto.C2G_LeaveMatchGroup request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LeaveMatchGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_LeaveMatchGroup> LeaveMatchGroupAsync(global::Proto.C2G_LeaveMatchGroup request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LeaveMatchGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_LeaveMatchGroup> LeaveMatchGroupAsync(global::Proto.C2G_LeaveMatchGroup request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LeaveMatchGroup, null, options, request);
      }
      public virtual global::Proto.G2C_ReloadMatchState ReloadMatchState(global::Proto.C2G_ReloadMatchState request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReloadMatchState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2C_ReloadMatchState ReloadMatchState(global::Proto.C2G_ReloadMatchState request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReloadMatchState, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_ReloadMatchState> ReloadMatchStateAsync(global::Proto.C2G_ReloadMatchState request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReloadMatchStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2C_ReloadMatchState> ReloadMatchStateAsync(global::Proto.C2G_ReloadMatchState request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReloadMatchState, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GateServerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GateServerServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GateServerServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_CreateHero, serviceImpl.CreateHero)
          .AddMethod(__Method_BeginGame, serviceImpl.BeginGame)
          .AddMethod(__Method_OperatorEquip, serviceImpl.OperatorEquip)
          .AddMethod(__Method_SaleItem, serviceImpl.SaleItem)
          .AddMethod(__Method_EquipmentLevelUp, serviceImpl.EquipmentLevelUp)
          .AddMethod(__Method_GMTool, serviceImpl.GMTool)
          .AddMethod(__Method_BuyPackageSize, serviceImpl.BuyPackageSize)
          .AddMethod(__Method_MagicLevelUp, serviceImpl.MagicLevelUp)
          .AddMethod(__Method_QueryShop, serviceImpl.QueryShop)
          .AddMethod(__Method_BuyItem, serviceImpl.BuyItem)
          .AddMethod(__Method_BuyGold, serviceImpl.BuyGold)
          .AddMethod(__Method_RefreshEquip, serviceImpl.RefreshEquip)
          .AddMethod(__Method_ActiveMagic, serviceImpl.ActiveMagic)
          .AddMethod(__Method_SearchPlayer, serviceImpl.SearchPlayer)
          .AddMethod(__Method_CreateMatch, serviceImpl.CreateMatch)
          .AddMethod(__Method_JoinMatch, serviceImpl.JoinMatch)
          .AddMethod(__Method_InviteJoinMatch, serviceImpl.InviteJoinMatch)
          .AddMethod(__Method_LeaveMatchGroup, serviceImpl.LeaveMatchGroup)
          .AddMethod(__Method_ReloadMatchState, serviceImpl.ReloadMatchState).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GateServerServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_Login, global::Proto.G2C_Login>(serviceImpl.Login));
      serviceBinder.AddMethod(__Method_CreateHero, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_CreateHero, global::Proto.G2C_CreateHero>(serviceImpl.CreateHero));
      serviceBinder.AddMethod(__Method_BeginGame, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_BeginGame, global::Proto.G2C_BeginGame>(serviceImpl.BeginGame));
      serviceBinder.AddMethod(__Method_OperatorEquip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_OperatorEquip, global::Proto.G2C_OperatorEquip>(serviceImpl.OperatorEquip));
      serviceBinder.AddMethod(__Method_SaleItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_SaleItem, global::Proto.G2C_SaleItem>(serviceImpl.SaleItem));
      serviceBinder.AddMethod(__Method_EquipmentLevelUp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_EquipmentLevelUp, global::Proto.G2C_EquipmentLevelUp>(serviceImpl.EquipmentLevelUp));
      serviceBinder.AddMethod(__Method_GMTool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_GMTool, global::Proto.G2C_GMTool>(serviceImpl.GMTool));
      serviceBinder.AddMethod(__Method_BuyPackageSize, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_BuyPackageSize, global::Proto.G2C_BuyPackageSize>(serviceImpl.BuyPackageSize));
      serviceBinder.AddMethod(__Method_MagicLevelUp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_MagicLevelUp, global::Proto.G2C_MagicLevelUp>(serviceImpl.MagicLevelUp));
      serviceBinder.AddMethod(__Method_QueryShop, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_Shop, global::Proto.G2C_Shop>(serviceImpl.QueryShop));
      serviceBinder.AddMethod(__Method_BuyItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_BuyItem, global::Proto.G2C_BuyItem>(serviceImpl.BuyItem));
      serviceBinder.AddMethod(__Method_BuyGold, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_BuyGold, global::Proto.G2C_BuyGold>(serviceImpl.BuyGold));
      serviceBinder.AddMethod(__Method_RefreshEquip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_RefreshEquip, global::Proto.G2C_RefreshEquip>(serviceImpl.RefreshEquip));
      serviceBinder.AddMethod(__Method_ActiveMagic, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_ActiveMagic, global::Proto.G2C_ActiveMagic>(serviceImpl.ActiveMagic));
      serviceBinder.AddMethod(__Method_SearchPlayer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_SearchPlayer, global::Proto.G2C_SearchPlayer>(serviceImpl.SearchPlayer));
      serviceBinder.AddMethod(__Method_CreateMatch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_CreateMatch, global::Proto.G2C_CreateMatch>(serviceImpl.CreateMatch));
      serviceBinder.AddMethod(__Method_JoinMatch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_JoinMatch, global::Proto.G2C_JoinMatch>(serviceImpl.JoinMatch));
      serviceBinder.AddMethod(__Method_InviteJoinMatch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_InviteJoinMatch, global::Proto.G2C_InviteJoinMatch>(serviceImpl.InviteJoinMatch));
      serviceBinder.AddMethod(__Method_LeaveMatchGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_LeaveMatchGroup, global::Proto.G2C_LeaveMatchGroup>(serviceImpl.LeaveMatchGroup));
      serviceBinder.AddMethod(__Method_ReloadMatchState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.C2G_ReloadMatchState, global::Proto.G2C_ReloadMatchState>(serviceImpl.ReloadMatchState));
    }

  }
  public static partial class GateServerInnerService
  {
    static readonly string __ServiceName = "Proto.GateServerInnerService";

    static readonly grpc::Marshaller<global::Proto.B2G_GetPlayerInfo> __Marshaller_Proto_B2G_GetPlayerInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.B2G_GetPlayerInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2B_GetPlayerInfo> __Marshaller_Proto_G2B_GetPlayerInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2B_GetPlayerInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.B2G_BattleReward> __Marshaller_Proto_B2G_BattleReward = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.B2G_BattleReward.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.G2B_BattleReward> __Marshaller_Proto_G2B_BattleReward = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.G2B_BattleReward.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.L2G_KillUser> __Marshaller_Proto_L2G_KillUser = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.L2G_KillUser.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.Void> __Marshaller_Proto_Void = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.Void.Parser.ParseFrom);

    static readonly grpc::Method<global::Proto.B2G_GetPlayerInfo, global::Proto.G2B_GetPlayerInfo> __Method_GetPlayerInfo = new grpc::Method<global::Proto.B2G_GetPlayerInfo, global::Proto.G2B_GetPlayerInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayerInfo",
        __Marshaller_Proto_B2G_GetPlayerInfo,
        __Marshaller_Proto_G2B_GetPlayerInfo);

    static readonly grpc::Method<global::Proto.B2G_BattleReward, global::Proto.G2B_BattleReward> __Method_BattleReward = new grpc::Method<global::Proto.B2G_BattleReward, global::Proto.G2B_BattleReward>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BattleReward",
        __Marshaller_Proto_B2G_BattleReward,
        __Marshaller_Proto_G2B_BattleReward);

    static readonly grpc::Method<global::Proto.L2G_KillUser, global::Proto.Void> __Method_KillUser = new grpc::Method<global::Proto.L2G_KillUser, global::Proto.Void>(
        grpc::MethodType.Unary,
        __ServiceName,
        "KillUser",
        __Marshaller_Proto_L2G_KillUser,
        __Marshaller_Proto_Void);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.GateServerReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of GateServerInnerService</summary>
    [grpc::BindServiceMethod(typeof(GateServerInnerService), "BindService")]
    public abstract partial class GateServerInnerServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Proto.G2B_GetPlayerInfo> GetPlayerInfo(global::Proto.B2G_GetPlayerInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.G2B_BattleReward> BattleReward(global::Proto.B2G_BattleReward request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.Void> KillUser(global::Proto.L2G_KillUser request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GateServerInnerService</summary>
    public partial class GateServerInnerServiceClient : grpc::ClientBase<GateServerInnerServiceClient>
    {
      /// <summary>Creates a new client for GateServerInnerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GateServerInnerServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GateServerInnerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GateServerInnerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GateServerInnerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GateServerInnerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Proto.G2B_GetPlayerInfo GetPlayerInfo(global::Proto.B2G_GetPlayerInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayerInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2B_GetPlayerInfo GetPlayerInfo(global::Proto.B2G_GetPlayerInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPlayerInfo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2B_GetPlayerInfo> GetPlayerInfoAsync(global::Proto.B2G_GetPlayerInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlayerInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2B_GetPlayerInfo> GetPlayerInfoAsync(global::Proto.B2G_GetPlayerInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPlayerInfo, null, options, request);
      }
      public virtual global::Proto.G2B_BattleReward BattleReward(global::Proto.B2G_BattleReward request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BattleReward(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.G2B_BattleReward BattleReward(global::Proto.B2G_BattleReward request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BattleReward, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2B_BattleReward> BattleRewardAsync(global::Proto.B2G_BattleReward request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BattleRewardAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.G2B_BattleReward> BattleRewardAsync(global::Proto.B2G_BattleReward request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BattleReward, null, options, request);
      }
      public virtual global::Proto.Void KillUser(global::Proto.L2G_KillUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KillUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.Void KillUser(global::Proto.L2G_KillUser request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_KillUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Void> KillUserAsync(global::Proto.L2G_KillUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KillUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Void> KillUserAsync(global::Proto.L2G_KillUser request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_KillUser, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GateServerInnerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GateServerInnerServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GateServerInnerServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetPlayerInfo, serviceImpl.GetPlayerInfo)
          .AddMethod(__Method_BattleReward, serviceImpl.BattleReward)
          .AddMethod(__Method_KillUser, serviceImpl.KillUser).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GateServerInnerServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetPlayerInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.B2G_GetPlayerInfo, global::Proto.G2B_GetPlayerInfo>(serviceImpl.GetPlayerInfo));
      serviceBinder.AddMethod(__Method_BattleReward, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.B2G_BattleReward, global::Proto.G2B_BattleReward>(serviceImpl.BattleReward));
      serviceBinder.AddMethod(__Method_KillUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.L2G_KillUser, global::Proto.Void>(serviceImpl.KillUser));
    }

  }
}
#endregion
