// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpkYXRhLnByb3RvEgVQcm90bxoLY29uc3QucHJvdG8aEGV4Y2VsY29uc3Qu",
            "cHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8iKgoHVmVjdG9yMxIJ",
            "CgF4GAEgASgCEgkKAXkYAiABKAISCQoBehgDIAEoAiJ3Cg5HYW1lU2VydmVy",
            "SW5mbxIMCgRob3N0GAIgASgJEgwKBHBvcnQYAyABKAUSEQoJc2VydmVyX2lk",
            "GAQgASgFEhgKEG1heF9wbGF5ZXJfQ291bnQYBSABKAUSHAoUY3VycmVudF9w",
            "bGF5ZXJfY291bnQYBiABKAUiTQoJV2VhckVxdWlwEg4KBkl0ZW1JRBgBIAEo",
            "BRIMCgRHVUlEGAIgASgJEiIKBFBhcnQYAyABKA4yFC5Qcm90by5FcXVpcG1l",
            "bnRUeXBlIiwKCUhlcm9NYWdpYxIQCghNYWdpY0tleRgBIAEoBRINCgVMZXZl",
            "bBgCIAEoBSKiAQoFREhlcm8SDgoGSGVyb0lEGAEgASgFEg0KBUxldmVsGAIg",
            "ASgFEhAKCEV4cHJpY2VzGAMgASgFEiAKBkVxdWlwcxgEIAMoCzIQLlByb3Rv",
            "LldlYXJFcXVpcBIgCgZNYWdpY3MYBSADKAsyEC5Qcm90by5IZXJvTWFnaWMS",
            "DAoETmFtZRgGIAEoCRIKCgJIUBgHIAEoBRIKCgJNUBgIIAEoBSJ9CglFcXVp",
            "cERhdGESEwoLUmVmcmVzaFRpbWUYASABKAUSLAoGVmFsdWVzGAIgAygLMhwu",
            "UHJvdG8uRXF1aXBEYXRhLlZhbHVlc0VudHJ5Gi0KC1ZhbHVlc0VudHJ5EgsK",
            "A2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToCOAEidgoKUGxheWVySXRlbRIO",
            "CgZJdGVtSUQYASABKAUSCwoDTnVtGAIgASgFEgwKBEdVSUQYAyABKAkSDgoG",
            "TG9ja2VkGAQgASgIEg0KBUxldmVsGAUgASgFEh4KBERhdGEYBiABKAsyEC5Q",
            "cm90by5FcXVpcERhdGEikQEKDVBsYXllclBhY2thZ2USLgoFSXRlbXMYASAD",
            "KAsyHy5Qcm90by5QbGF5ZXJQYWNrYWdlLkl0ZW1zRW50cnkSDwoHTWF4U2l6",
            "ZRgCIAEoBRo/CgpJdGVtc0VudHJ5EgsKA2tleRgBIAEoCRIgCgV2YWx1ZRgC",
            "IAEoCzIRLlByb3RvLlBsYXllckl0ZW06AjgBImMKEFBsYXllclNlcnZlcklu",
            "Zm8SEwoLQWNjb3VudFV1aWQYASABKAkSEAoIU2VydmVySUQYAiABKAUSEwoL",
            "U2VydmljZVBvcnQYAyABKAUSEwoLU2VydmljZUhvc3QYBCABKAkiSAoMSGVy",
            "b1Byb3BlcnR5EikKCFByb3BlcnR5GAEgASgOMhcuUHJvdG8uSGVyb1Byb3Bl",
            "cnR5VHlwZRINCgVWYWx1ZRgCIAEoBSJ/Cg1IZXJvTWFnaWNEYXRhEhcKD0NE",
            "Q29tcGxldGVkVGltZRgBIAEoAhIPCgdNYWdpY0lEGAIgASgFEh8KBU1UeXBl",
            "GAMgASgOMhAuUHJvdG8uTWFnaWNUeXBlEg4KBk1QQ29zdBgEIAEoBRITCgtD",
            "ZFRvdGFsVGltZRgFIAEoAiJACgxDbGllbnRDb25maWcSFwoPTG9naW5TZXJ2",
            "ZXJIb3N0GAEgASgJEhcKD0xvZ2luU2VydmVyUG9ydBgCIAEoBSLKAQoKTWFw",
            "RWxlbWVudBImCgRUeXBlGAEgASgOMhUuUHJvdG8uTWFwRWxlbWVudFR5cGVS",
            "AVQSIgoHRm9yd2FyZBgCIAEoCzIOLlByb3RvLlZlY3RvcjNSAUYSIwoIUG9z",
            "aXRpb24YAyABKAsyDi5Qcm90by5WZWN0b3IzUgFQEhMKCENvbmZpZ0lEGAQg",
            "ASgFUgFDEiIKB0xpbmtQb3MYBSABKAsyDi5Qcm90by5WZWN0b3IzUgFMEhIK",
            "B0dyb3VwSUQYBiABKAVSAUciNAoKTWFwQ29uZ2ZpZxImCghFbGVtZW50cxgB",
            "IAMoCzIRLlByb3RvLk1hcEVsZW1lbnRSAUUiMQoOU2VydmljZUFkZHJlc3MS",
            "EQoJSXBBZGRyZXNzGAEgASgJEgwKBFBvcnQYAiABKAUihgEKC01hdGNoUGxh",
            "eWVyEhEKCUFjY291bnRJRBgBIAEoCRIMCgROYW1lGAIgASgJEioKBEhlcm8Y",
            "AyABKAsyHC5Qcm90by5NYXRjaFBsYXllci5NYXRjaEhlcm8aKgoJTWF0Y2hI",
            "ZXJvEg0KBUxldmVsGAEgASgFEg4KBkhlcm9JRBgCIAEoBSo+CglNYWdpY1R5",
            "cGUSDQoJTVRfTm9ybWFsEAASFAoQTVRfTm9ybWFsX0FwcGVuZBABEgwKCE1U",
            "X01hZ2ljEAIqUwoQUmVsZWFzZXJNb2RlVHlwZRIMCghSTVRfTk9ORRAAEg0K",
            "CVJNVF9NYWdpYxABEhQKEFJNVF9Ob3JtYWxBdHRhY2sQAhIMCghSTVRfQnVm",
            "ZhAEKpABCg5NYXBFbGVtZW50VHlwZRIMCghNRVRfTk9ORRAAEhQKEE1FVF9N",
            "b25zdGVyR3JvdXAQARIUChBNRVRfRWxlbWVudEdyb3VwEAISCwoHTUVUX05Q",
            "QxADEhMKD01FVF9QTEFZRVJfSU5JVBAEEg8KC01FVF9Nb25zdGVyEAUSEQoN",
            "TUVUX1RyYW5zcG9ydBAGYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.ConstReflection.Descriptor, global::Proto.ExcelconstReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Proto.MagicType), typeof(global::Proto.ReleaserModeType), typeof(global::Proto.MapElementType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Vector3), global::Proto.Vector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.GameServerInfo), global::Proto.GameServerInfo.Parser, new[]{ "Host", "Port", "ServerId", "MaxPlayerCount", "CurrentPlayerCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.WearEquip), global::Proto.WearEquip.Parser, new[]{ "ItemID", "GUID", "Part" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.HeroMagic), global::Proto.HeroMagic.Parser, new[]{ "MagicKey", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.DHero), global::Proto.DHero.Parser, new[]{ "HeroID", "Level", "Exprices", "Equips", "Magics", "Name", "HP", "MP" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.EquipData), global::Proto.EquipData.Parser, new[]{ "RefreshTime", "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PlayerItem), global::Proto.PlayerItem.Parser, new[]{ "ItemID", "Num", "GUID", "Locked", "Level", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PlayerPackage), global::Proto.PlayerPackage.Parser, new[]{ "Items", "MaxSize" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.PlayerServerInfo), global::Proto.PlayerServerInfo.Parser, new[]{ "AccountUuid", "ServerID", "ServicePort", "ServiceHost" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.HeroProperty), global::Proto.HeroProperty.Parser, new[]{ "Property", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.HeroMagicData), global::Proto.HeroMagicData.Parser, new[]{ "CDCompletedTime", "MagicID", "MType", "MPCost", "CdTotalTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.ClientConfig), global::Proto.ClientConfig.Parser, new[]{ "LoginServerHost", "LoginServerPort" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.MapElement), global::Proto.MapElement.Parser, new[]{ "Type", "Forward", "Position", "ConfigID", "LinkPos", "GroupID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.MapCongfig), global::Proto.MapCongfig.Parser, new[]{ "Elements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.ServiceAddress), global::Proto.ServiceAddress.Parser, new[]{ "IpAddress", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.MatchPlayer), global::Proto.MatchPlayer.Parser, new[]{ "AccountID", "Name", "Hero" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Proto.MatchPlayer.Types.MatchHero), global::Proto.MatchPlayer.Types.MatchHero.Parser, new[]{ "Level", "HeroID" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum MagicType {
    [pbr::OriginalName("MT_Normal")] MtNormal = 0,
    [pbr::OriginalName("MT_Normal_Append")] MtNormalAppend = 1,
    [pbr::OriginalName("MT_Magic")] MtMagic = 2,
  }

  public enum ReleaserModeType {
    [pbr::OriginalName("RMT_NONE")] RmtNone = 0,
    [pbr::OriginalName("RMT_Magic")] RmtMagic = 1,
    [pbr::OriginalName("RMT_NormalAttack")] RmtNormalAttack = 2,
    [pbr::OriginalName("RMT_Buff")] RmtBuff = 4,
  }

  public enum MapElementType {
    [pbr::OriginalName("MET_NONE")] MetNone = 0,
    /// <summary>
    ///对应Monstergroup ID
    /// </summary>
    [pbr::OriginalName("MET_MonsterGroup")] MetMonsterGroup = 1,
    /// <summary>
    ///对应Elementsgroup ID
    /// </summary>
    [pbr::OriginalName("MET_ElementGroup")] MetElementGroup = 2,
    /// <summary>
    ///对应NPC
    /// </summary>
    [pbr::OriginalName("MET_NPC")] MetNpc = 3,
    /// <summary>
    ///角色初始化
    /// </summary>
    [pbr::OriginalName("MET_PLAYER_INIT")] MetPlayerInit = 4,
    /// <summary>
    ///怪物表id
    /// </summary>
    [pbr::OriginalName("MET_Monster")] MetMonster = 5,
    /// <summary>
    ///传送点
    /// </summary>
    [pbr::OriginalName("MET_Transport")] MetTransport = 6,
  }

  #endregion

  #region Messages
  public sealed partial class Vector3 : pb::IMessage<Vector3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vector3> _parser = new pb::MessageParser<Vector3>(() => new Vector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3(Vector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3 Clone() {
      return new Vector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameServerInfo : pb::IMessage<GameServerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameServerInfo> _parser = new pb::MessageParser<GameServerInfo>(() => new GameServerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameServerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameServerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameServerInfo(GameServerInfo other) : this() {
      host_ = other.host_;
      port_ = other.port_;
      serverId_ = other.serverId_;
      maxPlayerCount_ = other.maxPlayerCount_;
      currentPlayerCount_ = other.currentPlayerCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameServerInfo Clone() {
      return new GameServerInfo(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 2;
    private string host_ = "";
    /// <summary>
    ///主机地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private int port_;
    /// <summary>
    ///主机端口
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 4;
    private int serverId_;
    /// <summary>
    ///服务器ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "max_player_Count" field.</summary>
    public const int MaxPlayerCountFieldNumber = 5;
    private int maxPlayerCount_;
    /// <summary>
    ///最大服务数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPlayerCount {
      get { return maxPlayerCount_; }
      set {
        maxPlayerCount_ = value;
      }
    }

    /// <summary>Field number for the "current_player_count" field.</summary>
    public const int CurrentPlayerCountFieldNumber = 6;
    private int currentPlayerCount_;
    /// <summary>
    ///当前玩家数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentPlayerCount {
      get { return currentPlayerCount_; }
      set {
        currentPlayerCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameServerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameServerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (ServerId != other.ServerId) return false;
      if (MaxPlayerCount != other.MaxPlayerCount) return false;
      if (CurrentPlayerCount != other.CurrentPlayerCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (MaxPlayerCount != 0) hash ^= MaxPlayerCount.GetHashCode();
      if (CurrentPlayerCount != 0) hash ^= CurrentPlayerCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Host.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      if (ServerId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ServerId);
      }
      if (MaxPlayerCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxPlayerCount);
      }
      if (CurrentPlayerCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CurrentPlayerCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
      }
      if (MaxPlayerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayerCount);
      }
      if (CurrentPlayerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentPlayerCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameServerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      if (other.MaxPlayerCount != 0) {
        MaxPlayerCount = other.MaxPlayerCount;
      }
      if (other.CurrentPlayerCount != 0) {
        CurrentPlayerCount = other.CurrentPlayerCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Host = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
          case 32: {
            ServerId = input.ReadInt32();
            break;
          }
          case 40: {
            MaxPlayerCount = input.ReadInt32();
            break;
          }
          case 48: {
            CurrentPlayerCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Host = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
          case 32: {
            ServerId = input.ReadInt32();
            break;
          }
          case 40: {
            MaxPlayerCount = input.ReadInt32();
            break;
          }
          case 48: {
            CurrentPlayerCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WearEquip : pb::IMessage<WearEquip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WearEquip> _parser = new pb::MessageParser<WearEquip>(() => new WearEquip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WearEquip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WearEquip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WearEquip(WearEquip other) : this() {
      itemID_ = other.itemID_;
      gUID_ = other.gUID_;
      part_ = other.part_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WearEquip Clone() {
      return new WearEquip(this);
    }

    /// <summary>Field number for the "ItemID" field.</summary>
    public const int ItemIDFieldNumber = 1;
    private int itemID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemID {
      get { return itemID_; }
      set {
        itemID_ = value;
      }
    }

    /// <summary>Field number for the "GUID" field.</summary>
    public const int GUIDFieldNumber = 2;
    private string gUID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GUID {
      get { return gUID_; }
      set {
        gUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Part" field.</summary>
    public const int PartFieldNumber = 3;
    private global::Proto.EquipmentType part_ = global::Proto.EquipmentType.EtNone;
    /// <summary>
    ///部位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.EquipmentType Part {
      get { return part_; }
      set {
        part_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WearEquip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WearEquip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemID != other.ItemID) return false;
      if (GUID != other.GUID) return false;
      if (Part != other.Part) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemID != 0) hash ^= ItemID.GetHashCode();
      if (GUID.Length != 0) hash ^= GUID.GetHashCode();
      if (Part != global::Proto.EquipmentType.EtNone) hash ^= Part.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemID);
      }
      if (GUID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GUID);
      }
      if (Part != global::Proto.EquipmentType.EtNone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Part);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemID);
      }
      if (GUID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GUID);
      }
      if (Part != global::Proto.EquipmentType.EtNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Part);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WearEquip other) {
      if (other == null) {
        return;
      }
      if (other.ItemID != 0) {
        ItemID = other.ItemID;
      }
      if (other.GUID.Length != 0) {
        GUID = other.GUID;
      }
      if (other.Part != global::Proto.EquipmentType.EtNone) {
        Part = other.Part;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemID = input.ReadInt32();
            break;
          }
          case 18: {
            GUID = input.ReadString();
            break;
          }
          case 24: {
            Part = (global::Proto.EquipmentType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemID = input.ReadInt32();
            break;
          }
          case 18: {
            GUID = input.ReadString();
            break;
          }
          case 24: {
            Part = (global::Proto.EquipmentType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HeroMagic : pb::IMessage<HeroMagic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HeroMagic> _parser = new pb::MessageParser<HeroMagic>(() => new HeroMagic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroMagic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroMagic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroMagic(HeroMagic other) : this() {
      magicKey_ = other.magicKey_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroMagic Clone() {
      return new HeroMagic(this);
    }

    /// <summary>Field number for the "MagicKey" field.</summary>
    public const int MagicKeyFieldNumber = 1;
    private int magicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicKey {
      get { return magicKey_; }
      set {
        magicKey_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    /// <summary>
    ///level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroMagic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroMagic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MagicKey != other.MagicKey) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MagicKey != 0) hash ^= MagicKey.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MagicKey != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MagicKey);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MagicKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicKey);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroMagic other) {
      if (other == null) {
        return;
      }
      if (other.MagicKey != 0) {
        MagicKey = other.MagicKey;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MagicKey = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MagicKey = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家角色
  /// </summary>
  public sealed partial class DHero : pb::IMessage<DHero>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DHero> _parser = new pb::MessageParser<DHero>(() => new DHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DHero(DHero other) : this() {
      heroID_ = other.heroID_;
      level_ = other.level_;
      exprices_ = other.exprices_;
      equips_ = other.equips_.Clone();
      magics_ = other.magics_.Clone();
      name_ = other.name_;
      hP_ = other.hP_;
      mP_ = other.mP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DHero Clone() {
      return new DHero(this);
    }

    /// <summary>Field number for the "HeroID" field.</summary>
    public const int HeroIDFieldNumber = 1;
    private int heroID_;
    /// <summary>
    ///配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroID {
      get { return heroID_; }
      set {
        heroID_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    /// <summary>
    ///当前等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Exprices" field.</summary>
    public const int ExpricesFieldNumber = 3;
    private int exprices_;
    /// <summary>
    ///当前经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exprices {
      get { return exprices_; }
      set {
        exprices_ = value;
      }
    }

    /// <summary>Field number for the "Equips" field.</summary>
    public const int EquipsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Proto.WearEquip> _repeated_equips_codec
        = pb::FieldCodec.ForMessage(34, global::Proto.WearEquip.Parser);
    private readonly pbc::RepeatedField<global::Proto.WearEquip> equips_ = new pbc::RepeatedField<global::Proto.WearEquip>();
    /// <summary>
    ///当前穿戴装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.WearEquip> Equips {
      get { return equips_; }
    }

    /// <summary>Field number for the "Magics" field.</summary>
    public const int MagicsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Proto.HeroMagic> _repeated_magics_codec
        = pb::FieldCodec.ForMessage(42, global::Proto.HeroMagic.Parser);
    private readonly pbc::RepeatedField<global::Proto.HeroMagic> magics_ = new pbc::RepeatedField<global::Proto.HeroMagic>();
    /// <summary>
    ///英雄当前激活魔法
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.HeroMagic> Magics {
      get { return magics_; }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HP" field.</summary>
    public const int HPFieldNumber = 7;
    private int hP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HP {
      get { return hP_; }
      set {
        hP_ = value;
      }
    }

    /// <summary>Field number for the "MP" field.</summary>
    public const int MPFieldNumber = 8;
    private int mP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MP {
      get { return mP_; }
      set {
        mP_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroID != other.HeroID) return false;
      if (Level != other.Level) return false;
      if (Exprices != other.Exprices) return false;
      if(!equips_.Equals(other.equips_)) return false;
      if(!magics_.Equals(other.magics_)) return false;
      if (Name != other.Name) return false;
      if (HP != other.HP) return false;
      if (MP != other.MP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroID != 0) hash ^= HeroID.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Exprices != 0) hash ^= Exprices.GetHashCode();
      hash ^= equips_.GetHashCode();
      hash ^= magics_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (HP != 0) hash ^= HP.GetHashCode();
      if (MP != 0) hash ^= MP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HeroID);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (Exprices != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Exprices);
      }
      equips_.WriteTo(output, _repeated_equips_codec);
      magics_.WriteTo(output, _repeated_magics_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (HP != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HP);
      }
      if (MP != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroID);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Exprices != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exprices);
      }
      size += equips_.CalculateSize(_repeated_equips_codec);
      size += magics_.CalculateSize(_repeated_magics_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HP);
      }
      if (MP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DHero other) {
      if (other == null) {
        return;
      }
      if (other.HeroID != 0) {
        HeroID = other.HeroID;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Exprices != 0) {
        Exprices = other.Exprices;
      }
      equips_.Add(other.equips_);
      magics_.Add(other.magics_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.HP != 0) {
        HP = other.HP;
      }
      if (other.MP != 0) {
        MP = other.MP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroID = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            Exprices = input.ReadInt32();
            break;
          }
          case 34: {
            equips_.AddEntriesFrom(input, _repeated_equips_codec);
            break;
          }
          case 42: {
            magics_.AddEntriesFrom(input, _repeated_magics_codec);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            HP = input.ReadInt32();
            break;
          }
          case 64: {
            MP = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HeroID = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            Exprices = input.ReadInt32();
            break;
          }
          case 34: {
            equips_.AddEntriesFrom(ref input, _repeated_equips_codec);
            break;
          }
          case 42: {
            magics_.AddEntriesFrom(ref input, _repeated_magics_codec);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            HP = input.ReadInt32();
            break;
          }
          case 64: {
            MP = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EquipData : pb::IMessage<EquipData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EquipData> _parser = new pb::MessageParser<EquipData>(() => new EquipData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipData(EquipData other) : this() {
      refreshTime_ = other.refreshTime_;
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipData Clone() {
      return new EquipData(this);
    }

    /// <summary>Field number for the "RefreshTime" field.</summary>
    public const int RefreshTimeFieldNumber = 1;
    private int refreshTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RefreshTime {
      get { return refreshTime_; }
      set {
        refreshTime_ = value;
      }
    }

    /// <summary>Field number for the "Values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pbc::MapField<int, int>.Codec _map_values_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 18);
    private readonly pbc::MapField<int, int> values_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefreshTime != other.RefreshTime) return false;
      if (!Values.Equals(other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RefreshTime != 0) hash ^= RefreshTime.GetHashCode();
      hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RefreshTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RefreshTime);
      }
      values_.WriteTo(output, _map_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RefreshTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RefreshTime);
      }
      size += values_.CalculateSize(_map_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipData other) {
      if (other == null) {
        return;
      }
      if (other.RefreshTime != 0) {
        RefreshTime = other.RefreshTime;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RefreshTime = input.ReadInt32();
            break;
          }
          case 18: {
            values_.AddEntriesFrom(input, _map_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RefreshTime = input.ReadInt32();
            break;
          }
          case 18: {
            values_.AddEntriesFrom(ref input, _map_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家道具
  /// </summary>
  public sealed partial class PlayerItem : pb::IMessage<PlayerItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerItem> _parser = new pb::MessageParser<PlayerItem>(() => new PlayerItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerItem(PlayerItem other) : this() {
      itemID_ = other.itemID_;
      num_ = other.num_;
      gUID_ = other.gUID_;
      locked_ = other.locked_;
      level_ = other.level_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerItem Clone() {
      return new PlayerItem(this);
    }

    /// <summary>Field number for the "ItemID" field.</summary>
    public const int ItemIDFieldNumber = 1;
    private int itemID_;
    /// <summary>
    ///配置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemID {
      get { return itemID_; }
      set {
        itemID_ = value;
      }
    }

    /// <summary>Field number for the "Num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    /// <summary>
    ///拥有数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "GUID" field.</summary>
    public const int GUIDFieldNumber = 3;
    private string gUID_ = "";
    /// <summary>
    ///唯一识别码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GUID {
      get { return gUID_; }
      set {
        gUID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Locked" field.</summary>
    public const int LockedFieldNumber = 4;
    private bool locked_;
    /// <summary>
    ///是否锁定中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Locked {
      get { return locked_; }
      set {
        locked_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 5;
    private int level_;
    /// <summary>
    ///等级 装备特有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 6;
    private global::Proto.EquipData data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.EquipData Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemID != other.ItemID) return false;
      if (Num != other.Num) return false;
      if (GUID != other.GUID) return false;
      if (Locked != other.Locked) return false;
      if (Level != other.Level) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemID != 0) hash ^= ItemID.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (GUID.Length != 0) hash ^= GUID.GetHashCode();
      if (Locked != false) hash ^= Locked.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemID);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (GUID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GUID);
      }
      if (Locked != false) {
        output.WriteRawTag(32);
        output.WriteBool(Locked);
      }
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (data_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemID);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (GUID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GUID);
      }
      if (Locked != false) {
        size += 1 + 1;
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerItem other) {
      if (other == null) {
        return;
      }
      if (other.ItemID != 0) {
        ItemID = other.ItemID;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.GUID.Length != 0) {
        GUID = other.GUID;
      }
      if (other.Locked != false) {
        Locked = other.Locked;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Proto.EquipData();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemID = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 26: {
            GUID = input.ReadString();
            break;
          }
          case 32: {
            Locked = input.ReadBool();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 50: {
            if (data_ == null) {
              Data = new global::Proto.EquipData();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemID = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 26: {
            GUID = input.ReadString();
            break;
          }
          case 32: {
            Locked = input.ReadBool();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 50: {
            if (data_ == null) {
              Data = new global::Proto.EquipData();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家背包
  /// </summary>
  public sealed partial class PlayerPackage : pb::IMessage<PlayerPackage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerPackage> _parser = new pb::MessageParser<PlayerPackage>(() => new PlayerPackage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerPackage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPackage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPackage(PlayerPackage other) : this() {
      items_ = other.items_.Clone();
      maxSize_ = other.maxSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPackage Clone() {
      return new PlayerPackage(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Proto.PlayerItem>.Codec _map_items_codec
        = new pbc::MapField<string, global::Proto.PlayerItem>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Proto.PlayerItem.Parser), 10);
    private readonly pbc::MapField<string, global::Proto.PlayerItem> items_ = new pbc::MapField<string, global::Proto.PlayerItem>();
    /// <summary>
    ///道具列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Proto.PlayerItem> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "MaxSize" field.</summary>
    public const int MaxSizeFieldNumber = 2;
    private int maxSize_;
    /// <summary>
    ///背包上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxSize {
      get { return maxSize_; }
      set {
        maxSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerPackage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerPackage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Items.Equals(other.Items)) return false;
      if (MaxSize != other.MaxSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Items.GetHashCode();
      if (MaxSize != 0) hash ^= MaxSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _map_items_codec);
      if (MaxSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_map_items_codec);
      if (MaxSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerPackage other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      if (other.MaxSize != 0) {
        MaxSize = other.MaxSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _map_items_codec);
            break;
          }
          case 16: {
            MaxSize = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _map_items_codec);
            break;
          }
          case 16: {
            MaxSize = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///用户服务器映射
  /// </summary>
  public sealed partial class PlayerServerInfo : pb::IMessage<PlayerServerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerServerInfo> _parser = new pb::MessageParser<PlayerServerInfo>(() => new PlayerServerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerServerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerServerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerServerInfo(PlayerServerInfo other) : this() {
      accountUuid_ = other.accountUuid_;
      serverID_ = other.serverID_;
      servicePort_ = other.servicePort_;
      serviceHost_ = other.serviceHost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerServerInfo Clone() {
      return new PlayerServerInfo(this);
    }

    /// <summary>Field number for the "AccountUuid" field.</summary>
    public const int AccountUuidFieldNumber = 1;
    private string accountUuid_ = "";
    /// <summary>
    ///玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountUuid {
      get { return accountUuid_; }
      set {
        accountUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServerID" field.</summary>
    public const int ServerIDFieldNumber = 2;
    private int serverID_;
    /// <summary>
    ///所在服务器	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerID {
      get { return serverID_; }
      set {
        serverID_ = value;
      }
    }

    /// <summary>Field number for the "ServicePort" field.</summary>
    public const int ServicePortFieldNumber = 3;
    private int servicePort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServicePort {
      get { return servicePort_; }
      set {
        servicePort_ = value;
      }
    }

    /// <summary>Field number for the "ServiceHost" field.</summary>
    public const int ServiceHostFieldNumber = 4;
    private string serviceHost_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceHost {
      get { return serviceHost_; }
      set {
        serviceHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerServerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerServerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountUuid != other.AccountUuid) return false;
      if (ServerID != other.ServerID) return false;
      if (ServicePort != other.ServicePort) return false;
      if (ServiceHost != other.ServiceHost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountUuid.Length != 0) hash ^= AccountUuid.GetHashCode();
      if (ServerID != 0) hash ^= ServerID.GetHashCode();
      if (ServicePort != 0) hash ^= ServicePort.GetHashCode();
      if (ServiceHost.Length != 0) hash ^= ServiceHost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountUuid);
      }
      if (ServerID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ServerID);
      }
      if (ServicePort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ServicePort);
      }
      if (ServiceHost.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServiceHost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountUuid);
      }
      if (ServerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerID);
      }
      if (ServicePort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServicePort);
      }
      if (ServiceHost.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceHost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerServerInfo other) {
      if (other == null) {
        return;
      }
      if (other.AccountUuid.Length != 0) {
        AccountUuid = other.AccountUuid;
      }
      if (other.ServerID != 0) {
        ServerID = other.ServerID;
      }
      if (other.ServicePort != 0) {
        ServicePort = other.ServicePort;
      }
      if (other.ServiceHost.Length != 0) {
        ServiceHost = other.ServiceHost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountUuid = input.ReadString();
            break;
          }
          case 16: {
            ServerID = input.ReadInt32();
            break;
          }
          case 24: {
            ServicePort = input.ReadInt32();
            break;
          }
          case 34: {
            ServiceHost = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccountUuid = input.ReadString();
            break;
          }
          case 16: {
            ServerID = input.ReadInt32();
            break;
          }
          case 24: {
            ServicePort = input.ReadInt32();
            break;
          }
          case 34: {
            ServiceHost = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HeroProperty : pb::IMessage<HeroProperty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HeroProperty> _parser = new pb::MessageParser<HeroProperty>(() => new HeroProperty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroProperty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroProperty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroProperty(HeroProperty other) : this() {
      property_ = other.property_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroProperty Clone() {
      return new HeroProperty(this);
    }

    /// <summary>Field number for the "Property" field.</summary>
    public const int PropertyFieldNumber = 1;
    private global::Proto.HeroPropertyType property_ = global::Proto.HeroPropertyType.HptNone;
    /// <summary>
    ///属性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.HeroPropertyType Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    /// <summary>
    ///值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroProperty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroProperty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Property != other.Property) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Property != global::Proto.HeroPropertyType.HptNone) hash ^= Property.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Property != global::Proto.HeroPropertyType.HptNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Property);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Property != global::Proto.HeroPropertyType.HptNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Property);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroProperty other) {
      if (other == null) {
        return;
      }
      if (other.Property != global::Proto.HeroPropertyType.HptNone) {
        Property = other.Property;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Property = (global::Proto.HeroPropertyType) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Property = (global::Proto.HeroPropertyType) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HeroMagicData : pb::IMessage<HeroMagicData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HeroMagicData> _parser = new pb::MessageParser<HeroMagicData>(() => new HeroMagicData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroMagicData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroMagicData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroMagicData(HeroMagicData other) : this() {
      cDCompletedTime_ = other.cDCompletedTime_;
      magicID_ = other.magicID_;
      mType_ = other.mType_;
      mPCost_ = other.mPCost_;
      cdTotalTime_ = other.cdTotalTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroMagicData Clone() {
      return new HeroMagicData(this);
    }

    /// <summary>Field number for the "CDCompletedTime" field.</summary>
    public const int CDCompletedTimeFieldNumber = 1;
    private float cDCompletedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CDCompletedTime {
      get { return cDCompletedTime_; }
      set {
        cDCompletedTime_ = value;
      }
    }

    /// <summary>Field number for the "MagicID" field.</summary>
    public const int MagicIDFieldNumber = 2;
    private int magicID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicID {
      get { return magicID_; }
      set {
        magicID_ = value;
      }
    }

    /// <summary>Field number for the "MType" field.</summary>
    public const int MTypeFieldNumber = 3;
    private global::Proto.MagicType mType_ = global::Proto.MagicType.MtNormal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.MagicType MType {
      get { return mType_; }
      set {
        mType_ = value;
      }
    }

    /// <summary>Field number for the "MPCost" field.</summary>
    public const int MPCostFieldNumber = 4;
    private int mPCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MPCost {
      get { return mPCost_; }
      set {
        mPCost_ = value;
      }
    }

    /// <summary>Field number for the "CdTotalTime" field.</summary>
    public const int CdTotalTimeFieldNumber = 5;
    private float cdTotalTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CdTotalTime {
      get { return cdTotalTime_; }
      set {
        cdTotalTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroMagicData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroMagicData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CDCompletedTime, other.CDCompletedTime)) return false;
      if (MagicID != other.MagicID) return false;
      if (MType != other.MType) return false;
      if (MPCost != other.MPCost) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CdTotalTime, other.CdTotalTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CDCompletedTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CDCompletedTime);
      if (MagicID != 0) hash ^= MagicID.GetHashCode();
      if (MType != global::Proto.MagicType.MtNormal) hash ^= MType.GetHashCode();
      if (MPCost != 0) hash ^= MPCost.GetHashCode();
      if (CdTotalTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CdTotalTime);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CDCompletedTime != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CDCompletedTime);
      }
      if (MagicID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MagicID);
      }
      if (MType != global::Proto.MagicType.MtNormal) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MType);
      }
      if (MPCost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MPCost);
      }
      if (CdTotalTime != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CdTotalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CDCompletedTime != 0F) {
        size += 1 + 4;
      }
      if (MagicID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicID);
      }
      if (MType != global::Proto.MagicType.MtNormal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (MPCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MPCost);
      }
      if (CdTotalTime != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroMagicData other) {
      if (other == null) {
        return;
      }
      if (other.CDCompletedTime != 0F) {
        CDCompletedTime = other.CDCompletedTime;
      }
      if (other.MagicID != 0) {
        MagicID = other.MagicID;
      }
      if (other.MType != global::Proto.MagicType.MtNormal) {
        MType = other.MType;
      }
      if (other.MPCost != 0) {
        MPCost = other.MPCost;
      }
      if (other.CdTotalTime != 0F) {
        CdTotalTime = other.CdTotalTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            CDCompletedTime = input.ReadFloat();
            break;
          }
          case 16: {
            MagicID = input.ReadInt32();
            break;
          }
          case 24: {
            MType = (global::Proto.MagicType) input.ReadEnum();
            break;
          }
          case 32: {
            MPCost = input.ReadInt32();
            break;
          }
          case 45: {
            CdTotalTime = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            CDCompletedTime = input.ReadFloat();
            break;
          }
          case 16: {
            MagicID = input.ReadInt32();
            break;
          }
          case 24: {
            MType = (global::Proto.MagicType) input.ReadEnum();
            break;
          }
          case 32: {
            MPCost = input.ReadInt32();
            break;
          }
          case 45: {
            CdTotalTime = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientConfig : pb::IMessage<ClientConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientConfig> _parser = new pb::MessageParser<ClientConfig>(() => new ClientConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientConfig(ClientConfig other) : this() {
      loginServerHost_ = other.loginServerHost_;
      loginServerPort_ = other.loginServerPort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientConfig Clone() {
      return new ClientConfig(this);
    }

    /// <summary>Field number for the "LoginServerHost" field.</summary>
    public const int LoginServerHostFieldNumber = 1;
    private string loginServerHost_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoginServerHost {
      get { return loginServerHost_; }
      set {
        loginServerHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LoginServerPort" field.</summary>
    public const int LoginServerPortFieldNumber = 2;
    private int loginServerPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoginServerPort {
      get { return loginServerPort_; }
      set {
        loginServerPort_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoginServerHost != other.LoginServerHost) return false;
      if (LoginServerPort != other.LoginServerPort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoginServerHost.Length != 0) hash ^= LoginServerHost.GetHashCode();
      if (LoginServerPort != 0) hash ^= LoginServerPort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoginServerHost.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LoginServerHost);
      }
      if (LoginServerPort != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LoginServerPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoginServerHost.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginServerHost);
      }
      if (LoginServerPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoginServerPort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientConfig other) {
      if (other == null) {
        return;
      }
      if (other.LoginServerHost.Length != 0) {
        LoginServerHost = other.LoginServerHost;
      }
      if (other.LoginServerPort != 0) {
        LoginServerPort = other.LoginServerPort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LoginServerHost = input.ReadString();
            break;
          }
          case 16: {
            LoginServerPort = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LoginServerHost = input.ReadString();
            break;
          }
          case 16: {
            LoginServerPort = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapElement : pb::IMessage<MapElement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapElement> _parser = new pb::MessageParser<MapElement>(() => new MapElement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapElement(MapElement other) : this() {
      type_ = other.type_;
      forward_ = other.forward_ != null ? other.forward_.Clone() : null;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      configID_ = other.configID_;
      linkPos_ = other.linkPos_ != null ? other.linkPos_.Clone() : null;
      groupID_ = other.groupID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapElement Clone() {
      return new MapElement(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Proto.MapElementType type_ = global::Proto.MapElementType.MetNone;
    /// <summary>
    ///地图元素类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.MapElementType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Forward" field.</summary>
    public const int ForwardFieldNumber = 2;
    private global::Proto.Vector3 forward_;
    /// <summary>
    ///朝向
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Vector3 Forward {
      get { return forward_; }
      set {
        forward_ = value;
      }
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Proto.Vector3 position_;
    /// <summary>
    ///位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "ConfigID" field.</summary>
    public const int ConfigIDFieldNumber = 4;
    private int configID_;
    /// <summary>
    ///配表ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigID {
      get { return configID_; }
      set {
        configID_ = value;
      }
    }

    /// <summary>Field number for the "LinkPos" field.</summary>
    public const int LinkPosFieldNumber = 5;
    private global::Proto.Vector3 linkPos_;
    /// <summary>
    ///关联位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Vector3 LinkPos {
      get { return linkPos_; }
      set {
        linkPos_ = value;
      }
    }

    /// <summary>Field number for the "GroupID" field.</summary>
    public const int GroupIDFieldNumber = 6;
    private int groupID_;
    /// <summary>
    ///group id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GroupID {
      get { return groupID_; }
      set {
        groupID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Forward, other.Forward)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (ConfigID != other.ConfigID) return false;
      if (!object.Equals(LinkPos, other.LinkPos)) return false;
      if (GroupID != other.GroupID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Proto.MapElementType.MetNone) hash ^= Type.GetHashCode();
      if (forward_ != null) hash ^= Forward.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (ConfigID != 0) hash ^= ConfigID.GetHashCode();
      if (linkPos_ != null) hash ^= LinkPos.GetHashCode();
      if (GroupID != 0) hash ^= GroupID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Proto.MapElementType.MetNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (forward_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Forward);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (ConfigID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ConfigID);
      }
      if (linkPos_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LinkPos);
      }
      if (GroupID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GroupID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Proto.MapElementType.MetNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (forward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Forward);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (ConfigID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigID);
      }
      if (linkPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinkPos);
      }
      if (GroupID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapElement other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Proto.MapElementType.MetNone) {
        Type = other.Type;
      }
      if (other.forward_ != null) {
        if (forward_ == null) {
          Forward = new global::Proto.Vector3();
        }
        Forward.MergeFrom(other.Forward);
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Proto.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.ConfigID != 0) {
        ConfigID = other.ConfigID;
      }
      if (other.linkPos_ != null) {
        if (linkPos_ == null) {
          LinkPos = new global::Proto.Vector3();
        }
        LinkPos.MergeFrom(other.LinkPos);
      }
      if (other.GroupID != 0) {
        GroupID = other.GroupID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Proto.MapElementType) input.ReadEnum();
            break;
          }
          case 18: {
            if (forward_ == null) {
              Forward = new global::Proto.Vector3();
            }
            input.ReadMessage(Forward);
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Proto.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            ConfigID = input.ReadInt32();
            break;
          }
          case 42: {
            if (linkPos_ == null) {
              LinkPos = new global::Proto.Vector3();
            }
            input.ReadMessage(LinkPos);
            break;
          }
          case 48: {
            GroupID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Proto.MapElementType) input.ReadEnum();
            break;
          }
          case 18: {
            if (forward_ == null) {
              Forward = new global::Proto.Vector3();
            }
            input.ReadMessage(Forward);
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Proto.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            ConfigID = input.ReadInt32();
            break;
          }
          case 42: {
            if (linkPos_ == null) {
              LinkPos = new global::Proto.Vector3();
            }
            input.ReadMessage(LinkPos);
            break;
          }
          case 48: {
            GroupID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapCongfig : pb::IMessage<MapCongfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapCongfig> _parser = new pb::MessageParser<MapCongfig>(() => new MapCongfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapCongfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapCongfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapCongfig(MapCongfig other) : this() {
      elements_ = other.elements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapCongfig Clone() {
      return new MapCongfig(this);
    }

    /// <summary>Field number for the "Elements" field.</summary>
    public const int ElementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Proto.MapElement> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(10, global::Proto.MapElement.Parser);
    private readonly pbc::RepeatedField<global::Proto.MapElement> elements_ = new pbc::RepeatedField<global::Proto.MapElement>();
    /// <summary>
    ///元素
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.MapElement> Elements {
      get { return elements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapCongfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapCongfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elements_.Equals(other.elements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      elements_.WriteTo(output, _repeated_elements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elements_.CalculateSize(_repeated_elements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapCongfig other) {
      if (other == null) {
        return;
      }
      elements_.Add(other.elements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            elements_.AddEntriesFrom(ref input, _repeated_elements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ServiceAddress : pb::IMessage<ServiceAddress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServiceAddress> _parser = new pb::MessageParser<ServiceAddress>(() => new ServiceAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAddress(ServiceAddress other) : this() {
      ipAddress_ = other.ipAddress_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceAddress Clone() {
      return new ServiceAddress(this);
    }

    /// <summary>Field number for the "IpAddress" field.</summary>
    public const int IpAddressFieldNumber = 1;
    private string ipAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IpAddress != other.IpAddress) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IpAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IpAddress);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceAddress other) {
      if (other == null) {
        return;
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IpAddress = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IpAddress = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchPlayer : pb::IMessage<MatchPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchPlayer> _parser = new pb::MessageParser<MatchPlayer>(() => new MatchPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.DataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchPlayer(MatchPlayer other) : this() {
      accountID_ = other.accountID_;
      name_ = other.name_;
      hero_ = other.hero_ != null ? other.hero_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchPlayer Clone() {
      return new MatchPlayer(this);
    }

    /// <summary>Field number for the "AccountID" field.</summary>
    public const int AccountIDFieldNumber = 1;
    private string accountID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountID {
      get { return accountID_; }
      set {
        accountID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Hero" field.</summary>
    public const int HeroFieldNumber = 3;
    private global::Proto.MatchPlayer.Types.MatchHero hero_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.MatchPlayer.Types.MatchHero Hero {
      get { return hero_; }
      set {
        hero_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountID != other.AccountID) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Hero, other.Hero)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountID.Length != 0) hash ^= AccountID.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (hero_ != null) hash ^= Hero.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (hero_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Hero);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountID);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (hero_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hero);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchPlayer other) {
      if (other == null) {
        return;
      }
      if (other.AccountID.Length != 0) {
        AccountID = other.AccountID;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.hero_ != null) {
        if (hero_ == null) {
          Hero = new global::Proto.MatchPlayer.Types.MatchHero();
        }
        Hero.MergeFrom(other.Hero);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountID = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (hero_ == null) {
              Hero = new global::Proto.MatchPlayer.Types.MatchHero();
            }
            input.ReadMessage(Hero);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccountID = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (hero_ == null) {
              Hero = new global::Proto.MatchPlayer.Types.MatchHero();
            }
            input.ReadMessage(Hero);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MatchPlayer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MatchHero : pb::IMessage<MatchHero>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MatchHero> _parser = new pb::MessageParser<MatchHero>(() => new MatchHero());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MatchHero> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Proto.MatchPlayer.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatchHero() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatchHero(MatchHero other) : this() {
          level_ = other.level_;
          heroID_ = other.heroID_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatchHero Clone() {
          return new MatchHero(this);
        }

        /// <summary>Field number for the "Level" field.</summary>
        public const int LevelFieldNumber = 1;
        private int level_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Level {
          get { return level_; }
          set {
            level_ = value;
          }
        }

        /// <summary>Field number for the "HeroID" field.</summary>
        public const int HeroIDFieldNumber = 2;
        private int heroID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int HeroID {
          get { return heroID_; }
          set {
            heroID_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MatchHero);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MatchHero other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Level != other.Level) return false;
          if (HeroID != other.HeroID) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Level != 0) hash ^= Level.GetHashCode();
          if (HeroID != 0) hash ^= HeroID.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Level != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Level);
          }
          if (HeroID != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(HeroID);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Level != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
          }
          if (HeroID != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroID);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MatchHero other) {
          if (other == null) {
            return;
          }
          if (other.Level != 0) {
            Level = other.Level;
          }
          if (other.HeroID != 0) {
            HeroID = other.HeroID;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Level = input.ReadInt32();
                break;
              }
              case 16: {
                HeroID = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Level = input.ReadInt32();
                break;
              }
              case 16: {
                HeroID = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
